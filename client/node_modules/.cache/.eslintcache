[{"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\index.js":"1","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\App.js":"2","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\CreateImage\\CreateImage.js":"3","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\Nav\\Nav.js":"4","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\ChatBot\\ChatBot.js":"5","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\constants\\dallePrompts.js":"6","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\Loader\\Loader.js":"7","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\ChatBot\\DotDotDot\\DotDotDot.js":"8","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\Auth\\Auth.js":"9","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\Auth\\ShowSVG\\ShowSVG.js":"10","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\Auth\\HideSVG\\HideSVG.js":"11","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\redux\\User.js":"12","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\redux\\Store.js":"13","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\redux\\Images.js":"14","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\DalleImages\\DalleImages.js":"15","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\DalleImages\\DalleImage\\DalleImage.js":"16","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\TSST\\TSST.js":"17","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\SummarizeURL\\SummarizeURL.js":"18","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\Translator\\Translator.js":"19","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\constants\\languages.js":"20","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\TSST\\Microphone\\Microphone.js":"21","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\Main\\Main.js":"22"},{"size":638,"mtime":1682313759254,"results":"23","hashOfConfig":"24"},{"size":1333,"mtime":1682510812499,"results":"25","hashOfConfig":"24"},{"size":6638,"mtime":1682531753382,"results":"26","hashOfConfig":"24"},{"size":4387,"mtime":1682241136250,"results":"27","hashOfConfig":"24"},{"size":6895,"mtime":1682494077307,"results":"28","hashOfConfig":"24"},{"size":3846,"mtime":1682492214912,"results":"29","hashOfConfig":"24"},{"size":261,"mtime":1681752235526,"results":"30","hashOfConfig":"24"},{"size":261,"mtime":1681578707657,"results":"31","hashOfConfig":"24"},{"size":7800,"mtime":1682085370903,"results":"32","hashOfConfig":"24"},{"size":857,"mtime":1681063792000,"results":"33","hashOfConfig":"24"},{"size":1245,"mtime":1681063792000,"results":"34","hashOfConfig":"24"},{"size":2907,"mtime":1682005435052,"results":"35","hashOfConfig":"24"},{"size":216,"mtime":1682054285803,"results":"36","hashOfConfig":"24"},{"size":1184,"mtime":1682085511695,"results":"37","hashOfConfig":"24"},{"size":2263,"mtime":1682086221311,"results":"38","hashOfConfig":"24"},{"size":461,"mtime":1681762084553,"results":"39","hashOfConfig":"24"},{"size":4163,"mtime":1682492214912,"results":"40","hashOfConfig":"24"},{"size":4110,"mtime":1682493661735,"results":"41","hashOfConfig":"24"},{"size":7120,"mtime":1682254023451,"results":"42","hashOfConfig":"24"},{"size":10380,"mtime":1682251364634,"results":"43","hashOfConfig":"24"},{"size":1285,"mtime":1682411590382,"results":"44","hashOfConfig":"24"},{"size":113,"mtime":1682510757531,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1gexfht",{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"68"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"68"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\index.js",[],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\App.js",["117"],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\CreateImage\\CreateImage.js",[],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\Nav\\Nav.js",["118"],[],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport decode from \"jwt-decode\";\r\n\r\nimport { logout } from \"../../redux/User.js\"\r\n\r\nconst Nav = () => {\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    const [ user, setUser ] = useState((typeof window !== 'undefined') && JSON.parse(localStorage.getItem('profile')));\r\n\r\n    useEffect(() => {\r\n        const token = user?.token;\r\n        if(token){\r\n            const decodedToken = decode(token);\r\n\r\n            if(decodedToken.exp * 1000 < new Date().getTime()) logout(navigate, dispatch);\r\n        }\r\n\r\n        if (typeof window !== 'undefined') {\r\n          setUser(JSON.parse(localStorage.getItem(\"profile\")))\r\n        };\r\n    },[location]);\r\n\r\n    const handleLogout = () => {\r\n        logout(navigate, dispatch);\r\n        setUser(null);\r\n    }\r\n\r\n  return (\r\n    <header className='w-full flex justify-between items-center bg-white sm:px-8 px-4 py-4 border-b border-b-[#e6ebf4]'>\r\n        <Link to=\"/\"> \r\n            <svg fill=\"#000000\" viewBox=\"0 0 24 24\" className='w-[40px] aspect-square'>\r\n                <g id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\">\r\n                </g>\r\n                <g id=\"SVGRepo_tracerCarrier\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                </g>\r\n                <g id=\"SVGRepo_iconCarrier\">\r\n                    <title>OpenAI icon</title>\r\n                    <path d=\"M22.2819 9.8211a5.9847 5.9847 0 0 0-.5157-4.9108 6.0462 6.0462 0 0 0-6.5098-2.9A6.0651 6.0651 0 0 0 4.9807 4.1818a5.9847 5.9847 0 0 0-3.9977 2.9 6.0462 6.0462 0 0 0 .7427 7.0966 5.98 5.98 0 0 0 .511 4.9107 6.051 6.051 0 0 0 6.5146 2.9001A5.9847 5.9847 0 0 0 13.2599 24a6.0557 6.0557 0 0 0 5.7718-4.2058 5.9894 5.9894 0 0 0 3.9977-2.9001 6.0557 6.0557 0 0 0-.7475-7.0729zm-9.022 12.6081a4.4755 4.4755 0 0 1-2.8764-1.0408l.1419-.0804 4.7783-2.7582a.7948.7948 0 0 0 .3927-.6813v-6.7369l2.02 1.1686a.071.071 0 0 1 .038.052v5.5826a4.504 4.504 0 0 1-4.4945 4.4944zm-9.6607-4.1254a4.4708 4.4708 0 0 1-.5346-3.0137l.142.0852 4.783 2.7582a.7712.7712 0 0 0 .7806 0l5.8428-3.3685v2.3324a.0804.0804 0 0 1-.0332.0615L9.74 19.9502a4.4992 4.4992 0 0 1-6.1408-1.6464zM2.3408 7.8956a4.485 4.485 0 0 1 2.3655-1.9728V11.6a.7664.7664 0 0 0 .3879.6765l5.8144 3.3543-2.0201 1.1685a.0757.0757 0 0 1-.071 0l-4.8303-2.7865A4.504 4.504 0 0 1 2.3408 7.872zm16.5963 3.8558L13.1038 8.364 15.1192 7.2a.0757.0757 0 0 1 .071 0l4.8303 2.7913a4.4944 4.4944 0 0 1-.6765 8.1042v-5.6772a.79.79 0 0 0-.407-.667zm2.0107-3.0231l-.142-.0852-4.7735-2.7818a.7759.7759 0 0 0-.7854 0L9.409 9.2297V6.8974a.0662.0662 0 0 1 .0284-.0615l4.8303-2.7866a4.4992 4.4992 0 0 1 6.6802 4.66zM8.3065 12.863l-2.02-1.1638a.0804.0804 0 0 1-.038-.0567V6.0742a4.4992 4.4992 0 0 1 7.3757-3.4537l-.142.0805L8.704 5.459a.7948.7948 0 0 0-.3927.6813zm1.0976-2.3654l2.602-1.4998 2.6069 1.4998v2.9994l-2.5974 1.4997-2.6067-1.4997Z\">\r\n                    </path>\r\n                </g>\r\n            </svg>\r\n        </Link>\r\n\r\n        <div className='flex'>\r\n          <Link to=\"/createImage\" className=\"mr-5 font-medium bg-[rgb(109,84,210)] text-white px-4 py-2 rounded-md\">Create</Link>\r\n          <Link to=\"/chatBot\" className=\"mr-5 font-medium bg-[rgb(84,210,116)] text-white px-4 py-2 rounded-md\">Chat</Link>\r\n          <Link to=\"/TSST\" className=\"mr-5 font-medium bg-[rgb(226,188,37)] text-white px-4 py-2 rounded-md\">Text-To-Speech &lt;-&gt; </Link>\r\n          <Link to=\"/summarizeURL\" className=\"mr-5 font-medium bg-[rgb(37,97,226)] text-white px-4 py-2 rounded-md\">Summarize</Link>\r\n          <Link to=\"/translator\" className=\"mr-5 font-medium bg-[rgb(226,37,37)] text-white px-4 py-2 rounded-md\">Translate</Link>\r\n          {\r\n            (user) ? (\r\n              <div className=\"flex\">\r\n                  <button onClick={ handleLogout } className=\"font-medium bg-[rgb(217,217,217)] text-black px-4 py-2 rounded-md mr-2\"></button>\r\n                  <img src={user?.result?.picture} alt={user?.result?.name} className=\" rounded-full w-10\"/> \r\n              </div>\r\n            ) : (\r\n              <Link to=\"auth\" className=\"font-medium bg-[rgb(217,217,217)] text-black px-4 py-2 rounded-md\">Login</Link>\r\n            )\r\n          }\r\n        </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Nav","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\ChatBot\\ChatBot.js",["119","120","121"],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\constants\\dallePrompts.js",[],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\Loader\\Loader.js",[],[],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\ChatBot\\DotDotDot\\DotDotDot.js",[],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\Auth\\Auth.js",["122"],[],"import React, { useEffect, useState } from 'react'\nimport jwt_decode from \"jwt-decode\";\nimport { useDispatch } from 'react-redux';\nimport { useNavigate  } from \"react-router-dom\"; \nimport { motion } from 'framer-motion';\n\nimport { googleLogin, signup, login } from \"../../redux/User.js\";\n\nimport ShowSVG from \"./ShowSVG/ShowSVG.js\";\nimport HideSVG from \"./HideSVG/HideSVG.js\";\n\nimport \"./Auth.css\";\n\nconst Auth = () => {\n    const CLIENT_ID = \"18229699408-lt9gun1vb3r6moqak9fs3oh21sugscb1.apps.googleusercontent.com\";\n\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n    const [ isSignup, setIsSignup ] = useState(true);\n    const [ passVisible, setPassVisible] = useState(false);\n    const [ formData, setFormData ] = useState({\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        password: \"\",\n        repassword: \"\"\n    })\n    const[formErrors, setFormErrors] = useState({\n        firstNameError: \"\",\n        lastNameError: \"\",\n        emailError: \"\",\n        passwordError: \"\",\n        repasswordError: \"\",\n        accountExists: \"\",\n    });\n\n    const handlePassVisible = (e) => {\n        e.preventDefault();\n\n        passVisible ? setPassVisible(false) : setPassVisible(true);\n    }\n\n    const switchMode = (e) => {\n        e.preventDefault();\n\n        isSignup ? setIsSignup(false) : setIsSignup(true);\n    }\n\n    const handleCallbackResponse = (res) => {\n        googleLogin({result: jwt_decode(res.credential), token: res.credential}, dispatch);\n\n        navigate(\"/\");\n    }\n    useEffect(() => {\n        /* global google */\n\n        google.accounts.id.initialize({\n            client_id: CLIENT_ID,\n            callback: handleCallbackResponse\n        })\n        google.accounts.id.renderButton(\n            document.getElementById(\"googleLogIn\"),\n            { \n                theme: \"outline\", \n                size: \"large\"}\n        );\n\n        },[]);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        \n        let hasError = false;\n\n        const fieldsToValidate = ['firstName', 'lastName', 'email', \"password\"];\n        fieldsToValidate.forEach((field) => {\n        if (formData[field].trim() === '') {\n            console.log(field);\n            hasError = true;\n            setFormErrors((prevFormErrors) => ({...prevFormErrors, [`${field}Error`]: `${field} is required`}));\n        }\n        });\n\n        if(formData.password !== formData.repassword){\n            setFormErrors((prevFormErrors) => ({...prevFormErrors,  repasswordError: \"passwords do not match\"}));\n            hasError = true;\n        }\n\n        if(!hasError){\n            if(isSignup){\n                const res = await signup(formData, navigate, dispatch);\n                \n                if(res.message === \"Account already exists.\"){\n                    setFormErrors((prevFormErrors) => ({...prevFormErrors,  accountExists: res.message}));\n\n                    console.log(formErrors);\n                }\n            }else{\n                login(formData, navigate, dispatch);\n            }\n        }else{\n            console.log(formErrors);\n        }\n    }\n\n    const handleChange = (e) => {\n        setFormData({ ...formData, [e.target.name]: e.target.value});\n        setFormErrors({ ...formErrors, [`${e.target.name}Error`]: '' });\n\n        if(e.target.name === \"email\"){\n            console.log(formErrors);\n            setFormErrors((prevFormErrors) => ({...prevFormErrors,  accountExists: \"\"}));\n        }\n    }\n    \n  return (\n    <motion.div \n        initial={{ opacity: 0 }} \n        animate={{ opacity: 1 }} \n        exit={{ opacity: 0 }} \n        className=\"formContainerContainer\">\n        <div className=\"formContainer\">\n            <h1 className=\"authFormHeader\">{ isSignup ? \"Sign Up\" : \"Log In\"}</h1>\n            <form>\n                {\n                    isSignup && (<div className=\"flName\">\n                                    <div className='inputError' style={{width: \"45%\"}}>\n                                        <input type=\"text\" name=\"firstName\" className=\"firstName\" onChange={ handleChange }></input>\n                                        <h5 className=\"lableInput\">First Name</h5>\n                                        {formErrors.firstNameError && (<div className=\"error\">{formErrors.firstNameError}</div>)}\n                                    </div>\n                                    \n                                    <div className='inputError' style={{width: \"45%\"}}>\n                                        <input type=\"text\" name=\"lastName\" className=\"lastName\" onChange={ handleChange }></input>\n                                        <h5 className=\"lableInput\">Last Name</h5>\n                                        {formErrors.lastNameError && (<div className=\"error\">{formErrors.lastNameError}</div>)}\n                                    </div>\n                                </div>)\n                }\n                \n                \n                <div className='inputError'>\n                    <input type=\"email\" name=\"email\" className=\"email\" onChange={ handleChange }></input>\n                    <h5 className=\"lableInput\">E-Mail</h5>\n                    {\n                        formErrors.emailError ? (\n                            <div className=\"error\">{formErrors.emailError}</div>\n                        ) : (\n                            formErrors.accountExists && (\n                                <div className=\"error\">{formErrors.accountExists}</div>\n                            )\n                        )\n                    }\n                </div>\n\n                <div className='inputError'>\n                    <div className=\"passwordContainer\"> \n                        <input type={ passVisible ? \"text\" : \"password\" } name=\"password\" className=\"password\" onChange={ handleChange }></input>\n                        <h5 className=\"lableInput\">Password</h5>\n                        <button style={{backgroundColor: \"transparent\", border: \"none\"}} onClick={ handlePassVisible }>{passVisible ? <HideSVG /> : <ShowSVG />}</button>\n                    </div>\n\n                    {formErrors.passwordError && (<div className=\"error\">{formErrors.passwordError}</div>)}\n                </div>\n                {\n                    isSignup && (\n                        \n                        <div className='inputError'>\n                            <input type=\"password\" name=\"repassword\" className=\"repassword\" onChange={ handleChange }></input>\n                            <h5 className=\"lableInput\">Re-Enter Password</h5>\n                            {formErrors.repasswordError && (<div className=\"error\">{formErrors.repasswordError}</div>)}\n                        </div>\n                    )\n                }\n                \n                <div className=\"signupinContainer\">\n                    <button className=\"signupin\" onClick={ handleSubmit }>{ isSignup ? \"Sign Up\" : \"Log In\"}</button>\n                </div>\n\n                <div className=\"googleLogInContainer\">\n                    <div id=\"googleLogIn\"></div>\n                </div>\n            </form>\n                \n            <div className=\"switchContainer\">\n                { \n                    isSignup ? (\n                                <>\n                                    <p>Already have an account? </p>\n                                    <button onClick={switchMode}>Log In</button>\n                                </>\n                    ) : (\n                        <>\n                            <p>Don't have an account yet?</p>\n                            <button onClick={switchMode}>Sign Up</button>\n                        </>  \n                    )\n                }\n            </div>\n        </div>\n    </motion.div>\n\n\n  )\n}\n\nexport default Auth","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\Auth\\ShowSVG\\ShowSVG.js",[],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\Auth\\HideSVG\\HideSVG.js",[],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\redux\\User.js",[],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\redux\\Store.js",[],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\redux\\Images.js",[],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\DalleImages\\DalleImages.js",["123"],[],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { motion } from \"framer-motion\";\r\n\r\nimport { fetchImages } from '../../redux/Images';\r\nimport Image from './DalleImage/DalleImage';\r\nimport Loader from '../Loader/Loader';\r\n\r\n\r\nconst Posts = () => {\r\n    const dispatch = useDispatch();\r\n    const [loading, setLoading] = useState(true);\r\n    const fetchImagesPending = useSelector(state => state.images.pending.fetchImages);\r\n\r\n    useEffect(() => {\r\n        fetchImages(dispatch);\r\n    },[]);\r\n\r\n    useEffect(() => {\r\n        setLoading(fetchImagesPending);\r\n    }, [fetchImagesPending])\r\n\r\n    \r\n\r\n    const imagesInfo = useSelector(state => state.images.imagesInfo);\r\n    const [images, setImages] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setImages(imagesInfo);\r\n    },[imagesInfo]);\r\n\r\n\r\n    return(\r\n        loading ? (\r\n            <div className='w-full h-[calc(100vh-73px)] flex justify-center items-center'>\r\n                <div className='flex flex-col justify-center items-center'>\r\n                    <Loader />\r\n                    <h1 className='mt-5'>Fetching Data...</h1>\r\n                </div>\r\n            </div>\r\n        ) : (\r\n            (images?.length === 0) ? (\r\n                <h1>Be the first to post!</h1>\r\n            ) : (\r\n                <motion.div \r\n                    initial={{ opacity: 0 }} \r\n                    animate={{ opacity: 1 }} \r\n                    exit={{ opacity: 0 }}\r\n                    transition={{ duration: 0.75}}\r\n                    className='h-fit min-h-[calc(100vh-73px)] w-full px-10 flex bg-slate-50 justify-between max-sm:flex-col'>\r\n\r\n                    <div className='mt-10 grid grid-cols-[repeat(5,19%)] gap-y-5 gap-x-5'>\r\n                    {\r\n                        images.map( (image, index) => (\r\n                            <div key={image._id} className={` ${(index === 1) && (\"row-start-1 col-start-1 row-end-3 col-end-3\")}`}>\r\n                                <Image imageInfo={image} index={index}/>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                    </div>\r\n                </motion.div>\r\n            )\r\n        )\r\n  );\r\n}\r\n\r\nexport default Posts","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\DalleImages\\DalleImage\\DalleImage.js",["124"],[],"import React from 'react'\r\n\r\nconst Image = ({ imageInfo, index }) => {\r\n  return (\r\n    <div className={`border-solid px-8 bg-white shadow-2xl rounded-lg`}>\r\n      <div className=' text-2xl'>\r\n        {imageInfo.name}\r\n      </div>\r\n\r\n      <div className='w-full'>\r\n        <img src={imageInfo.generatedImage}></img>\r\n      </div>\r\n\r\n      <div className='py-5 break-words'>\r\n        {imageInfo.prompt}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Image","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\TSST\\TSST.js",["125","126","127"],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\SummarizeURL\\SummarizeURL.js",[],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\Translator\\Translator.js",[],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\constants\\languages.js",[],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\TSST\\Microphone\\Microphone.js",[],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\Main\\Main.js",[],[],{"ruleId":"128","severity":1,"message":"129","line":8,"column":8,"nodeType":"130","messageId":"131","endLine":8,"endColumn":19},{"ruleId":"132","severity":1,"message":"133","line":26,"column":7,"nodeType":"134","endLine":26,"endColumn":17,"suggestions":"135"},{"ruleId":"128","severity":1,"message":"136","line":2,"column":10,"nodeType":"130","messageId":"131","endLine":2,"endColumn":21},{"ruleId":"128","severity":1,"message":"137","line":5,"column":8,"nodeType":"130","messageId":"131","endLine":5,"endColumn":17},{"ruleId":"132","severity":1,"message":"138","line":58,"column":7,"nodeType":"134","endLine":58,"endColumn":13,"suggestions":"139"},{"ruleId":"132","severity":1,"message":"140","line":69,"column":11,"nodeType":"134","endLine":69,"endColumn":13,"suggestions":"141"},{"ruleId":"132","severity":1,"message":"142","line":17,"column":7,"nodeType":"134","endLine":17,"endColumn":9,"suggestions":"143"},{"ruleId":"144","severity":1,"message":"145","line":11,"column":9,"nodeType":"146","endLine":11,"endColumn":45},{"ruleId":"128","severity":1,"message":"147","line":11,"column":10,"nodeType":"130","messageId":"131","endLine":11,"endColumn":19},{"ruleId":"128","severity":1,"message":"148","line":14,"column":10,"nodeType":"130","messageId":"131","endLine":14,"endColumn":21},{"ruleId":"128","severity":1,"message":"149","line":14,"column":23,"nodeType":"130","messageId":"131","endLine":14,"endColumn":37},"no-unused-vars","'DalleImages' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'navigate', and 'user?.token'. Either include them or remove the dependency array.","ArrayExpression",["150"],"'useDispatch' is defined but never used.","'DotDotDot' is defined but never used.","React Hook useEffect has missing dependencies: 'BASE_URL' and 'chatResponses'. Either include them or remove the dependency array. You can also do a functional update 'setChatResponses(c => ...)' if you only need 'chatResponses' in the 'setChatResponses' call.",["151"],"React Hook useEffect has a missing dependency: 'handleCallbackResponse'. Either include it or remove the dependency array.",["152"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["153"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'audioFile' is assigned a value but never used.","'audioBuffer' is assigned a value but never used.","'setAudioBuffer' is assigned a value but never used.",{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},"Update the dependencies array to be: [dispatch, location, navigate, user?.token]",{"range":"162","text":"163"},"Update the dependencies array to be: [BASE_URL, chat, chatResponses]",{"range":"164","text":"165"},"Update the dependencies array to be: [handleCallbackResponse]",{"range":"166","text":"167"},"Update the dependencies array to be: [dispatch]",{"range":"168","text":"169"},[868,878],"[dispatch, location, navigate, user?.token]",[1877,1883],"[BASE_URL, chat, chatResponses]",[1907,1909],"[handleCallbackResponse]",[554,556],"[dispatch]"]