[{"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\index.js":"1","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\App.js":"2","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\CreateImage\\CreateImage.js":"3","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\Nav\\Nav.js":"4","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\ChatBot\\ChatBot.js":"5","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\constants\\dallePrompts.js":"6","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\Loader\\Loader.js":"7","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\ChatBot\\DotDotDot\\DotDotDot.js":"8","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\Auth\\Auth.js":"9","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\Auth\\ShowSVG\\ShowSVG.js":"10","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\Auth\\HideSVG\\HideSVG.js":"11","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\redux\\User.js":"12","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\redux\\Store.js":"13","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\redux\\Images.js":"14","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\DalleImages\\DalleImages.js":"15","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\DalleImages\\DalleImage\\DalleImage.js":"16"},{"size":327,"mtime":1681754751720,"results":"17","hashOfConfig":"18"},{"size":749,"mtime":1681752192554,"results":"19","hashOfConfig":"18"},{"size":4385,"mtime":1681760193835,"results":"20","hashOfConfig":"18"},{"size":3890,"mtime":1681805834458,"results":"21","hashOfConfig":"18"},{"size":6178,"mtime":1681807923022,"results":"22","hashOfConfig":"18"},{"size":3846,"mtime":1681202631531,"results":"23","hashOfConfig":"18"},{"size":261,"mtime":1681752235526,"results":"24","hashOfConfig":"18"},{"size":261,"mtime":1681578707657,"results":"25","hashOfConfig":"18"},{"size":7638,"mtime":1681804836511,"results":"26","hashOfConfig":"18"},{"size":857,"mtime":1681063792000,"results":"27","hashOfConfig":"18"},{"size":1245,"mtime":1681063792000,"results":"28","hashOfConfig":"18"},{"size":2773,"mtime":1681805213602,"results":"29","hashOfConfig":"18"},{"size":424,"mtime":1681749068558,"results":"30","hashOfConfig":"18"},{"size":1182,"mtime":1681804998758,"results":"31","hashOfConfig":"18"},{"size":1289,"mtime":1681804981843,"results":"32","hashOfConfig":"18"},{"size":461,"mtime":1681762084553,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1gexfht",{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\index.js",[],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\App.js",["84"],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\CreateImage\\CreateImage.js",[],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\Nav\\Nav.js",["85"],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\ChatBot\\ChatBot.js",["86","87"],[],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport DotDotDot from './DotDotDot/DotDotDot';\r\n\r\nconst ChatBot = () => {\r\n    const userInfo = useSelector(state => state?.user?.userInfo);\r\n    console.log(userInfo);\r\n    const BASE_URL = process.env.REACT_APP_SERVER_URL || \"http://localhost:5000\";\r\n    const [responsePending, setResponsePending] = useState(false);\r\n\r\n    const [message, setMessage] = useState({\r\n        role: \"\",\r\n        content: \"\"\r\n    });\r\n    const [chat, setChat] = useState([]);\r\n    const [chatResponses, setChatResponses]= useState([]);\r\n    \r\n    const handleChange = (e) => {\r\n        setMessage({role:\"user\", content:e.target.value});\r\n    }\r\n    const handleKeyDown = async (e) => {\r\n        if (e.key === 'Enter') {\r\n            setChat((prevChat) => [...prevChat, message])\r\n            setMessage({role:\"\", content:\"\"});\r\n        }        \r\n    };\r\n\r\n    useEffect(() => {\r\n        const post = async() => {\r\n            try {\r\n                setResponsePending(true);\r\n\r\n                const res = await fetch(`${BASE_URL}/api/openai/chatGPT`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({ chat: chat }),\r\n                });\r\n                \r\n                const data = await res.json();\r\n\r\n                setChatResponses([...chatResponses, data.chatResponse]);\r\n\r\n                setResponsePending(false);\r\n            } catch (error) {\r\n                console.log(error);\r\n\r\n                setResponsePending(false);\r\n            } finally{\r\n                setResponsePending(false);\r\n            }\r\n        }\r\n\r\n        if(chat.length > 0) {post();}\r\n    },[chat]);\r\n\r\n  return (\r\n    <div className='h-[calc(100vh-73px)] w-full min-h-fit flex'>\r\n        <div className='float-left h-full bg-[#2c2d37] w-[20vw] shadow-xl shadow-[#10a37f] relative z-1'>\r\n            {\r\n                (userInfo) ? (\r\n                    <div className='h-full px-5 flex justify-between items-center text-white'>\r\n                        <div className='w-full h-[90%] flex items-center flex-col justify-between'>\r\n                            <div className='w-full flex flex-col'>\r\n                                <button className='w-full mb-3 border-2 border-[#22232b] py-3 rounded-lg hover:bg-[#454757] hover:bg-opacity-30 transition-all'>Chat 1</button>\r\n                                <button className='w-full mb-3 border-2 border-[#22232b] py-3 rounded-lg hover:bg-[#454757] hover:bg-opacity-30 transition-all'>Chat 2</button>\r\n                                <button className='w-full mb-3 border-2 border-[#22232b] py-3 rounded-lg hover:bg-[#454757] hover:bg-opacity-30 transition-all'>Chat 3</button>\r\n                                <button className='w-full mb-3 border-2 border-[#22232b] py-3 rounded-lg hover:bg-[#454757] hover:bg-opacity-30 transition-all'>Chat 4</button>\r\n                            </div>\r\n\r\n                            <div className='w-full flex flex-col'>\r\n                                <button className='w-full mb-3 border-2 border-green-500 py-3 rounded-lg hover:bg-green-200 hover:bg-opacity-30 transition-all'>Create New Chat</button>\r\n                                <button className='w-full mb-3 border-2 border-red-500 py-3 rounded-lg hover:bg-red-200 hover:bg-opacity-30 transition-all'>Delete This Chat</button>\r\n                                <button className='w-full mb-3 border-2 border-yellow-500 py-3 rounded-lg hover:bg-yellow-200 hover:bg-opacity-30 transition-all'>Delete All Chats</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    <div className='relative h-full px-5 flex justify-center'>\r\n                        <div className='absolute top-0 mt-10 text-white text-lg font-bold bg-[#343541] py-5 px-3 shadow-black shadow-inner'>Please Login in order to save and create new chats</div>\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n\r\n        <div className='h-[calc(100vh-73px)] w-full min-h-fit bg-[#343541]'>\r\n            <div className='w-full h-[85%] px-20 py-10 flex flex-col overflow-y-scroll' style={{scrollbarWidth: \"thin\"}}>\r\n                {\r\n                    (chat.length > 0) && (\r\n                        chat.map((message, index) => (\r\n                            <div className='w-full h-fit mb-3' key={index} >\r\n                                <div style={{ float: 'left' }} className='bg-gray-100 w-fit px-5 py-3 rounded-r-lg rounded-t-lg'>\r\n                                    {message.content}\r\n                                </div>\r\n\r\n                                <div style={{ float: 'right' }} className='bg-[#10a37f] w-fit px-5 py-3 rounded-l-lg rounded-t-lg mt-10 break-words max-w-md'>\r\n                                    {\r\n                                        (responsePending && chatResponses[index] === undefined) ? (\r\n                                            console.log(chatResponses[index]),\r\n                                            <DotDotDot />\r\n                                        ) : (\r\n                                            chatResponses[index]\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        ))\r\n                    )   \r\n                }\r\n            </div>\r\n\r\n            <div className=' bg-[#33363f] w-full h-[15%] py-3 flex justify-center items-center border-t-[1px] border-[rgb(0,255,123)]'>\r\n                <input type=\"text\" placeholder=\"ayo wassup ma home BOYY!!!\" value={message.content} onChange={ handleChange } onKeyDown={ handleKeyDown } className='w-[80%] h-fit px-5 py-3 rounded-sm outline-1 bg-[#40414f] text-white focus:outline focus:outline-[rgb(0,255,123)] focus:shadow-[rgba(0,255,123,0.2)_0_0_5px_5px] transition-all duration-300'></input>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChatBot","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\constants\\dallePrompts.js",[],[],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\Loader\\Loader.js",[],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\ChatBot\\DotDotDot\\DotDotDot.js",[],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\Auth\\Auth.js",["88"],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\Auth\\ShowSVG\\ShowSVG.js",[],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\Auth\\HideSVG\\HideSVG.js",[],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\redux\\User.js",[],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\redux\\Store.js",[],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\redux\\Images.js",[],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\DalleImages\\DalleImages.js",["89"],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\DalleImages\\DalleImage\\DalleImage.js",["90"],[],{"ruleId":"91","severity":1,"message":"92","line":2,"column":25,"nodeType":"93","messageId":"94","endLine":2,"endColumn":29},{"ruleId":"95","severity":1,"message":"96","line":24,"column":7,"nodeType":"97","endLine":24,"endColumn":17,"suggestions":"98"},{"ruleId":"91","severity":1,"message":"99","line":2,"column":10,"nodeType":"93","messageId":"94","endLine":2,"endColumn":21},{"ruleId":"95","severity":1,"message":"100","line":57,"column":7,"nodeType":"97","endLine":57,"endColumn":13,"suggestions":"101"},{"ruleId":"95","severity":1,"message":"102","line":68,"column":11,"nodeType":"97","endLine":68,"endColumn":13,"suggestions":"103"},{"ruleId":"95","severity":1,"message":"104","line":13,"column":7,"nodeType":"97","endLine":13,"endColumn":9,"suggestions":"105"},{"ruleId":"106","severity":1,"message":"107","line":11,"column":9,"nodeType":"108","endLine":11,"endColumn":45},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'navigate', and 'user?.token'. Either include them or remove the dependency array.","ArrayExpression",["109"],"'useDispatch' is defined but never used.","React Hook useEffect has missing dependencies: 'BASE_URL' and 'chatResponses'. Either include them or remove the dependency array. You can also do a functional update 'setChatResponses(c => ...)' if you only need 'chatResponses' in the 'setChatResponses' call.",["110"],"React Hook useEffect has a missing dependency: 'handleCallbackResponse'. Either include it or remove the dependency array.",["111"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["112"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"113","fix":"114"},{"desc":"115","fix":"116"},{"desc":"117","fix":"118"},{"desc":"119","fix":"120"},"Update the dependencies array to be: [dispatch, location, navigate, user?.token]",{"range":"121","text":"122"},"Update the dependencies array to be: [BASE_URL, chat, chatResponses]",{"range":"123","text":"124"},"Update the dependencies array to be: [handleCallbackResponse]",{"range":"125","text":"126"},"Update the dependencies array to be: [dispatch]",{"range":"127","text":"128"},[774,784],"[dispatch, location, navigate, user?.token]",[1807,1813],"[BASE_URL, chat, chatResponses]",[1867,1869],"[handleCallbackResponse]",[334,336],"[dispatch]"]