[{"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\index.js":"1","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\App.js":"2","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\CreateImage\\CreateImage.js":"3","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\Nav\\Nav.js":"4","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\ChatBot\\ChatBot.js":"5","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\constants\\dallePrompts.js":"6","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\Loader\\Loader.js":"7","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\ChatBot\\DotDotDot\\DotDotDot.js":"8","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\Auth\\Auth.js":"9","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\Auth\\ShowSVG\\ShowSVG.js":"10","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\Auth\\HideSVG\\HideSVG.js":"11","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\redux\\User.js":"12","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\redux\\Store.js":"13","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\redux\\Images.js":"14","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\DalleImages\\DalleImages.js":"15","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\DalleImages\\DalleImage\\DalleImage.js":"16","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\TSST\\TSST.js":"17","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\SummarizeURL\\SummarizeURL.js":"18","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\Translator\\Translator.js":"19","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\constants\\languages.js":"20","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\TSST\\Microphone\\Microphone.js":"21","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\Main\\Main.js":"22","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\Footer\\Footer.js":"23"},{"size":638,"mtime":1682313759254,"results":"24","hashOfConfig":"25"},{"size":1404,"mtime":1682626966833,"results":"26","hashOfConfig":"25"},{"size":6797,"mtime":1682615933705,"results":"27","hashOfConfig":"25"},{"size":4465,"mtime":1682627458525,"results":"28","hashOfConfig":"25"},{"size":6852,"mtime":1682618049476,"results":"29","hashOfConfig":"25"},{"size":3846,"mtime":1682492214912,"results":"30","hashOfConfig":"25"},{"size":261,"mtime":1681752235526,"results":"31","hashOfConfig":"25"},{"size":261,"mtime":1681578707657,"results":"32","hashOfConfig":"25"},{"size":7800,"mtime":1682085370903,"results":"33","hashOfConfig":"25"},{"size":857,"mtime":1681063792000,"results":"34","hashOfConfig":"25"},{"size":1245,"mtime":1681063792000,"results":"35","hashOfConfig":"25"},{"size":2907,"mtime":1682005435052,"results":"36","hashOfConfig":"25"},{"size":216,"mtime":1682054285803,"results":"37","hashOfConfig":"25"},{"size":1184,"mtime":1682085511695,"results":"38","hashOfConfig":"25"},{"size":2259,"mtime":1682615925232,"results":"39","hashOfConfig":"25"},{"size":461,"mtime":1681762084553,"results":"40","hashOfConfig":"25"},{"size":4163,"mtime":1682492214912,"results":"41","hashOfConfig":"25"},{"size":4110,"mtime":1682493661735,"results":"42","hashOfConfig":"25"},{"size":7120,"mtime":1682254023451,"results":"43","hashOfConfig":"25"},{"size":10380,"mtime":1682251364634,"results":"44","hashOfConfig":"25"},{"size":1285,"mtime":1682411590382,"results":"45","hashOfConfig":"25"},{"size":6133,"mtime":1682628466033,"results":"46","hashOfConfig":"25"},{"size":1178,"mtime":1682627700826,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1gexfht",{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"69"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"69"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\index.js",[],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\App.js",["120"],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\CreateImage\\CreateImage.js",[],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\Nav\\Nav.js",["121"],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\ChatBot\\ChatBot.js",["122","123"],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\constants\\dallePrompts.js",[],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\Loader\\Loader.js",[],[],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\ChatBot\\DotDotDot\\DotDotDot.js",[],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\Auth\\Auth.js",["124"],[],"import React, { useEffect, useState } from 'react'\nimport jwt_decode from \"jwt-decode\";\nimport { useDispatch } from 'react-redux';\nimport { useNavigate  } from \"react-router-dom\"; \nimport { motion } from 'framer-motion';\n\nimport { googleLogin, signup, login } from \"../../redux/User.js\";\n\nimport ShowSVG from \"./ShowSVG/ShowSVG.js\";\nimport HideSVG from \"./HideSVG/HideSVG.js\";\n\nimport \"./Auth.css\";\n\nconst Auth = () => {\n    const CLIENT_ID = \"18229699408-lt9gun1vb3r6moqak9fs3oh21sugscb1.apps.googleusercontent.com\";\n\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n    const [ isSignup, setIsSignup ] = useState(true);\n    const [ passVisible, setPassVisible] = useState(false);\n    const [ formData, setFormData ] = useState({\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        password: \"\",\n        repassword: \"\"\n    })\n    const[formErrors, setFormErrors] = useState({\n        firstNameError: \"\",\n        lastNameError: \"\",\n        emailError: \"\",\n        passwordError: \"\",\n        repasswordError: \"\",\n        accountExists: \"\",\n    });\n\n    const handlePassVisible = (e) => {\n        e.preventDefault();\n\n        passVisible ? setPassVisible(false) : setPassVisible(true);\n    }\n\n    const switchMode = (e) => {\n        e.preventDefault();\n\n        isSignup ? setIsSignup(false) : setIsSignup(true);\n    }\n\n    const handleCallbackResponse = (res) => {\n        googleLogin({result: jwt_decode(res.credential), token: res.credential}, dispatch);\n\n        navigate(\"/\");\n    }\n    useEffect(() => {\n        /* global google */\n\n        google.accounts.id.initialize({\n            client_id: CLIENT_ID,\n            callback: handleCallbackResponse\n        })\n        google.accounts.id.renderButton(\n            document.getElementById(\"googleLogIn\"),\n            { \n                theme: \"outline\", \n                size: \"large\"}\n        );\n\n        },[]);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        \n        let hasError = false;\n\n        const fieldsToValidate = ['firstName', 'lastName', 'email', \"password\"];\n        fieldsToValidate.forEach((field) => {\n        if (formData[field].trim() === '') {\n            console.log(field);\n            hasError = true;\n            setFormErrors((prevFormErrors) => ({...prevFormErrors, [`${field}Error`]: `${field} is required`}));\n        }\n        });\n\n        if(formData.password !== formData.repassword){\n            setFormErrors((prevFormErrors) => ({...prevFormErrors,  repasswordError: \"passwords do not match\"}));\n            hasError = true;\n        }\n\n        if(!hasError){\n            if(isSignup){\n                const res = await signup(formData, navigate, dispatch);\n                \n                if(res.message === \"Account already exists.\"){\n                    setFormErrors((prevFormErrors) => ({...prevFormErrors,  accountExists: res.message}));\n\n                    console.log(formErrors);\n                }\n            }else{\n                login(formData, navigate, dispatch);\n            }\n        }else{\n            console.log(formErrors);\n        }\n    }\n\n    const handleChange = (e) => {\n        setFormData({ ...formData, [e.target.name]: e.target.value});\n        setFormErrors({ ...formErrors, [`${e.target.name}Error`]: '' });\n\n        if(e.target.name === \"email\"){\n            console.log(formErrors);\n            setFormErrors((prevFormErrors) => ({...prevFormErrors,  accountExists: \"\"}));\n        }\n    }\n    \n  return (\n    <motion.div \n        initial={{ opacity: 0 }} \n        animate={{ opacity: 1 }} \n        exit={{ opacity: 0 }} \n        className=\"formContainerContainer\">\n        <div className=\"formContainer\">\n            <h1 className=\"authFormHeader\">{ isSignup ? \"Sign Up\" : \"Log In\"}</h1>\n            <form>\n                {\n                    isSignup && (<div className=\"flName\">\n                                    <div className='inputError' style={{width: \"45%\"}}>\n                                        <input type=\"text\" name=\"firstName\" className=\"firstName\" onChange={ handleChange }></input>\n                                        <h5 className=\"lableInput\">First Name</h5>\n                                        {formErrors.firstNameError && (<div className=\"error\">{formErrors.firstNameError}</div>)}\n                                    </div>\n                                    \n                                    <div className='inputError' style={{width: \"45%\"}}>\n                                        <input type=\"text\" name=\"lastName\" className=\"lastName\" onChange={ handleChange }></input>\n                                        <h5 className=\"lableInput\">Last Name</h5>\n                                        {formErrors.lastNameError && (<div className=\"error\">{formErrors.lastNameError}</div>)}\n                                    </div>\n                                </div>)\n                }\n                \n                \n                <div className='inputError'>\n                    <input type=\"email\" name=\"email\" className=\"email\" onChange={ handleChange }></input>\n                    <h5 className=\"lableInput\">E-Mail</h5>\n                    {\n                        formErrors.emailError ? (\n                            <div className=\"error\">{formErrors.emailError}</div>\n                        ) : (\n                            formErrors.accountExists && (\n                                <div className=\"error\">{formErrors.accountExists}</div>\n                            )\n                        )\n                    }\n                </div>\n\n                <div className='inputError'>\n                    <div className=\"passwordContainer\"> \n                        <input type={ passVisible ? \"text\" : \"password\" } name=\"password\" className=\"password\" onChange={ handleChange }></input>\n                        <h5 className=\"lableInput\">Password</h5>\n                        <button style={{backgroundColor: \"transparent\", border: \"none\"}} onClick={ handlePassVisible }>{passVisible ? <HideSVG /> : <ShowSVG />}</button>\n                    </div>\n\n                    {formErrors.passwordError && (<div className=\"error\">{formErrors.passwordError}</div>)}\n                </div>\n                {\n                    isSignup && (\n                        \n                        <div className='inputError'>\n                            <input type=\"password\" name=\"repassword\" className=\"repassword\" onChange={ handleChange }></input>\n                            <h5 className=\"lableInput\">Re-Enter Password</h5>\n                            {formErrors.repasswordError && (<div className=\"error\">{formErrors.repasswordError}</div>)}\n                        </div>\n                    )\n                }\n                \n                <div className=\"signupinContainer\">\n                    <button className=\"signupin\" onClick={ handleSubmit }>{ isSignup ? \"Sign Up\" : \"Log In\"}</button>\n                </div>\n\n                <div className=\"googleLogInContainer\">\n                    <div id=\"googleLogIn\"></div>\n                </div>\n            </form>\n                \n            <div className=\"switchContainer\">\n                { \n                    isSignup ? (\n                                <>\n                                    <p>Already have an account? </p>\n                                    <button onClick={switchMode}>Log In</button>\n                                </>\n                    ) : (\n                        <>\n                            <p>Don't have an account yet?</p>\n                            <button onClick={switchMode}>Sign Up</button>\n                        </>  \n                    )\n                }\n            </div>\n        </div>\n    </motion.div>\n\n\n  )\n}\n\nexport default Auth","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\Auth\\ShowSVG\\ShowSVG.js",[],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\Auth\\HideSVG\\HideSVG.js",[],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\redux\\User.js",[],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\redux\\Store.js",[],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\redux\\Images.js",[],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\DalleImages\\DalleImages.js",["125"],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\DalleImages\\DalleImage\\DalleImage.js",["126"],[],"import React from 'react'\r\n\r\nconst Image = ({ imageInfo, index }) => {\r\n  return (\r\n    <div className={`border-solid px-8 bg-white shadow-2xl rounded-lg`}>\r\n      <div className=' text-2xl'>\r\n        {imageInfo.name}\r\n      </div>\r\n\r\n      <div className='w-full'>\r\n        <img src={imageInfo.generatedImage}></img>\r\n      </div>\r\n\r\n      <div className='py-5 break-words'>\r\n        {imageInfo.prompt}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Image","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\TSST\\TSST.js",["127","128","129"],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\SummarizeURL\\SummarizeURL.js",[],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\Translator\\Translator.js",[],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\constants\\languages.js",[],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\TSST\\Microphone\\Microphone.js",[],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\Main\\Main.js",[],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\Footer\\Footer.js",["130"],[],{"ruleId":"131","severity":1,"message":"132","line":8,"column":8,"nodeType":"133","messageId":"134","endLine":8,"endColumn":19},{"ruleId":"135","severity":1,"message":"136","line":26,"column":7,"nodeType":"137","endLine":26,"endColumn":17,"suggestions":"138"},{"ruleId":"131","severity":1,"message":"139","line":2,"column":10,"nodeType":"133","messageId":"134","endLine":2,"endColumn":21},{"ruleId":"135","severity":1,"message":"140","line":58,"column":7,"nodeType":"137","endLine":58,"endColumn":13,"suggestions":"141"},{"ruleId":"135","severity":1,"message":"142","line":69,"column":11,"nodeType":"137","endLine":69,"endColumn":13,"suggestions":"143"},{"ruleId":"135","severity":1,"message":"144","line":17,"column":7,"nodeType":"137","endLine":17,"endColumn":9,"suggestions":"145"},{"ruleId":"146","severity":1,"message":"147","line":11,"column":9,"nodeType":"148","endLine":11,"endColumn":45},{"ruleId":"131","severity":1,"message":"149","line":11,"column":10,"nodeType":"133","messageId":"134","endLine":11,"endColumn":19},{"ruleId":"131","severity":1,"message":"150","line":14,"column":10,"nodeType":"133","messageId":"134","endLine":14,"endColumn":21},{"ruleId":"131","severity":1,"message":"151","line":14,"column":23,"nodeType":"133","messageId":"134","endLine":14,"endColumn":37},{"ruleId":"152","severity":1,"message":"153","line":16,"column":19,"nodeType":"148","messageId":"154","endLine":16,"endColumn":75,"fix":"155"},"no-unused-vars","'DalleImages' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'navigate', and 'user?.token'. Either include them or remove the dependency array.","ArrayExpression",["156"],"'useDispatch' is defined but never used.","React Hook useEffect has missing dependencies: 'BASE_URL' and 'chatResponses'. Either include them or remove the dependency array. You can also do a functional update 'setChatResponses(c => ...)' if you only need 'chatResponses' in the 'setChatResponses' call.",["157"],"React Hook useEffect has a missing dependency: 'handleCallbackResponse'. Either include it or remove the dependency array.",["158"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["159"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'audioFile' is assigned a value but never used.","'audioBuffer' is assigned a value but never used.","'setAudioBuffer' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"160","text":"161"},{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},[869,869]," rel=\"noreferrer\"","Update the dependencies array to be: [dispatch, location, navigate, user?.token]",{"range":"170","text":"171"},"Update the dependencies array to be: [BASE_URL, chat, chatResponses]",{"range":"172","text":"173"},"Update the dependencies array to be: [handleCallbackResponse]",{"range":"174","text":"175"},"Update the dependencies array to be: [dispatch]",{"range":"176","text":"177"},[868,878],"[dispatch, location, navigate, user?.token]",[1854,1860],"[BASE_URL, chat, chatResponses]",[1907,1909],"[handleCallbackResponse]",[554,556],"[dispatch]"]