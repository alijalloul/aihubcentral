[{"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\index.js":"1","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\App.js":"2","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\CreateImage\\CreateImage.js":"3","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\Nav\\Nav.js":"4","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\ChatBot\\ChatBot.js":"5","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\constants\\dallePrompts.js":"6","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\Loader\\Loader.js":"7","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\ChatBot\\DotDotDot\\DotDotDot.js":"8","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\Auth\\Auth.js":"9","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\Auth\\ShowSVG\\ShowSVG.js":"10","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\Auth\\HideSVG\\HideSVG.js":"11","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\redux\\User.js":"12","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\redux\\Store.js":"13","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\redux\\Images.js":"14","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\DalleImages\\DalleImages.js":"15","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\DalleImages\\DalleImage\\DalleImage.js":"16","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\TSST\\TSST.js":"17","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\SummarizeURL\\SummarizeURL.js":"18","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\Translator\\Translator.js":"19","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\constants\\languages.js":"20","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\TSST\\Microphone\\Microphone.js":"21","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\Main\\Main.js":"22","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\Footer\\Footer.js":"23"},{"size":638,"mtime":1682747948237,"results":"24","hashOfConfig":"25"},{"size":1404,"mtime":1682626966833,"results":"26","hashOfConfig":"25"},{"size":6907,"mtime":1682751241480,"results":"27","hashOfConfig":"25"},{"size":4764,"mtime":1682751145911,"results":"28","hashOfConfig":"25"},{"size":6871,"mtime":1682670532530,"results":"29","hashOfConfig":"25"},{"size":3846,"mtime":1682492214912,"results":"30","hashOfConfig":"25"},{"size":261,"mtime":1681752235526,"results":"31","hashOfConfig":"25"},{"size":261,"mtime":1681578707657,"results":"32","hashOfConfig":"25"},{"size":7894,"mtime":1682672091618,"results":"33","hashOfConfig":"25"},{"size":857,"mtime":1681063792000,"results":"34","hashOfConfig":"25"},{"size":1245,"mtime":1681063792000,"results":"35","hashOfConfig":"25"},{"size":2907,"mtime":1682005435052,"results":"36","hashOfConfig":"25"},{"size":216,"mtime":1682054285803,"results":"37","hashOfConfig":"25"},{"size":1184,"mtime":1682085511695,"results":"38","hashOfConfig":"25"},{"size":2259,"mtime":1682615925232,"results":"39","hashOfConfig":"25"},{"size":461,"mtime":1681762084553,"results":"40","hashOfConfig":"25"},{"size":4163,"mtime":1682492214912,"results":"41","hashOfConfig":"25"},{"size":4126,"mtime":1682670832214,"results":"42","hashOfConfig":"25"},{"size":8198,"mtime":1682675610454,"results":"43","hashOfConfig":"25"},{"size":10380,"mtime":1682251364634,"results":"44","hashOfConfig":"25"},{"size":1285,"mtime":1682411590382,"results":"45","hashOfConfig":"25"},{"size":6133,"mtime":1682669560049,"results":"46","hashOfConfig":"25"},{"size":1293,"mtime":1682628589888,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"1gexfht",{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"51"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"51"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"51"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"51"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"51"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"51"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"125","usedDeprecatedRules":"51"},"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\index.js",[],[],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\App.js",["126"],[],"import React from \"react\";\nimport { Route, Routes, useLocation } from \"react-router-dom\"\nimport { AnimatePresence } from \"framer-motion\";\n\nimport Nav from \"./components/Nav/Nav.js\";\nimport CreateImage from \"./components/CreateImage/CreateImage.js\";\nimport ChatBot from \"./components/ChatBot/ChatBot.js\";\nimport DalleImages from \"./components/DalleImages/DalleImages.js\";\nimport Auth from \"./components/Auth/Auth.js\";\nimport TSST from \"./components/TSST/TSST.js\";\nimport SummarizeURL from \"./components/SummarizeURL/SummarizeURL.js\";\nimport Translator from \"./components/Translator/Translator.js\";\nimport Main from \"./components/Main/Main.js\";\nimport Footer from \"./components/Footer/Footer.js\";\n\nconst App = () => {\n  const location = useLocation();\n\n  return (\n    <>\n        <Nav />\n        <AnimatePresence>\n          <Routes location={location} key={location.pathname}> \n            <Route path=\"/\" element={ <Main />} />\n            <Route path=\"/createImage\" element={ <CreateImage />} />\n            <Route path=\"/chatBot\" element={<ChatBot />} />\n            <Route path=\"/TSST\" element={<TSST />} />\n            <Route path=\"/summarizeURL\" element={<SummarizeURL />} />\n            <Route path=\"/translator\" element={<Translator />} /> \n            <Route path=\"/auth\" element={<Auth />} />\n          </Routes>\n        </AnimatePresence>\n        <Footer />\n    </>  \n  );\n}\n\nexport default App;\n","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\CreateImage\\CreateImage.js",[],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\Nav\\Nav.js",["127"],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\ChatBot\\ChatBot.js",["128","129"],[],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { motion } from 'framer-motion';\r\n\r\nimport \"./ChatBot.css\";\r\n\r\nconst ChatBot = () => {\r\n    const userInfo = useSelector(state => state?.user?.userInfo);\r\n    const BASE_URL = process.env.REACT_APP_SERVER_URL || \"http://localhost:5000\";\r\n    const [responsePending, setResponsePending] = useState(false);\r\n    const [loadingDots, setLoadingDots] = useState('');\r\n\r\n    const [message, setMessage] = useState({\r\n        role: \"\",\r\n        content: \"\"\r\n    });\r\n    const [chat, setChat] = useState([]);\r\n    const [chatResponses, setChatResponses]= useState([]);\r\n    \r\n    const handleChange = (e) => {\r\n        setMessage({role:\"user\", content:e.target.value});\r\n    }\r\n    const handleKeyDown = async (e) => {\r\n        if (e.key === 'Enter') {\r\n            setChat((prevChat) => [...prevChat, message])\r\n            setMessage({role:\"\", content:\"\"});\r\n        }        \r\n    };\r\n\r\n    useEffect(() => {\r\n        const post = async() => {\r\n            try {\r\n                setResponsePending(true);\r\n\r\n                const res = await fetch(`${BASE_URL}/api/openai/chatGPT`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({ chat: chat }),\r\n                });\r\n                \r\n                const data = await res.json();\r\n\r\n                setChatResponses([...chatResponses, data.chatResponse]);\r\n\r\n                setResponsePending(false);\r\n            } catch (error) {\r\n                console.log(error);\r\n\r\n                setResponsePending(false);\r\n            } finally{\r\n                setResponsePending(false);\r\n            }\r\n        }\r\n\r\n        if(chat.length > 0) {post();}\r\n    },[chat]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n          setLoadingDots(prevDots => {\r\n            return prevDots === '...' ? '' : prevDots + '.';\r\n          });\r\n        }, 500);\r\n    \r\n        return () => {\r\n          clearInterval(interval);\r\n        };\r\n      }, []);\r\n\r\n  return (\r\n    <motion.div \r\n        initial={{ opacity: 0 }} \r\n        animate={{ opacity: 1 }} \r\n        exit={{ opacity: 0 }} \r\n        className='h-[calc(100vh-73px)] w-full min-h-fit flex bg-slate-50 sm:h-[calc(100vh-173px)'>\r\n        <div className='float-left h-full bg-[#202123] w-[20vw] shadow-xl shadow-black relative z-1 sm:hidden'>\r\n            {\r\n                (userInfo) ? (\r\n                    <div className='h-full px-5 flex justify-between items-center text-white'>\r\n                        <div className='w-full h-[90%] flex items-center flex-col justify-between'>\r\n                            <div className='w-full flex flex-col'>\r\n                                <button className='w-full mb-1 bg-[#343541] py-3 rounded-lg hover:bg-[#454757] hover:bg-opacity-30 transition-all'>Chat 1</button>\r\n                                <button className='w-full mb-1 py-3 rounded-lg hover:bg-[#454757] hover:bg-opacity-30 transition-all'>Chat 2</button>\r\n                                <button className='w-full mb-1 py-3 rounded-lg hover:bg-[#454757] hover:bg-opacity-30 transition-all'>Chat 3</button>\r\n                                <button className='w-full mb-1 py-3 rounded-lg hover:bg-[#454757] hover:bg-opacity-30 transition-all'>Chat 4</button>\r\n                            </div>\r\n\r\n                            <div className='w-full flex flex-col'>\r\n                                <button className='w-full mb-3 text-black border-2 bg-green-300 border-green-500 py-3 rounded-lg hover:bg-green-400 hover:bg-opacity-30 transition-all'>Create New Chat</button>\r\n                                <button className='w-full mb-3 text-black border-2 bg-red-300 border-red-500 py-3 rounded-lg hover:bg-red-400 hover:bg-opacity-30 transition-all'>Delete This Chat</button>\r\n                                <button className='w-full mb-3 text-black border-2 bg-yellow-300 border-yellow-500 py-3 rounded-lg hover:bg-yellow-400 hover:bg-opacity-30 transition-all'>Delete All Chats</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    <div className='relative h-full px-5 flex justify-center'>\r\n                        <div className='absolute top-0 mt-10 text-white text-lg font-bold bg-[#343541] py-5 px-3 shadow-black shadow-inner'>Please Login in order to save and create new chats</div>\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n\r\n        <div className='h-full w-full'>\r\n            <div className='w-full h-[80%] px-20 py-10 flex flex-col overflow-y-scroll sm:px-5' style={{scrollbarWidth: \"thin\"}}>\r\n                {\r\n                    (chat.length > 0) && (\r\n                        chat.map((message, index) => (\r\n                            <div className='w-full h-fit mb-3' key={index} >\r\n                                <div className='userMessages float-left bg-white w-fit px-5 py-3 rounded-r-lg rounded-t-lg sm:w-full sm:rounded-lg'>\r\n                                    {message.content}\r\n                                </div>\r\n\r\n                                <div className='gptMessages float-right bg-[#10a37f] text-white w-fit min-w-30px px-5 py-3 rounded-l-lg rounded-t-lg my-16 break-words max-w-md sm:w-full sm:rounded-lg'>\r\n                                    {\r\n                                        (responsePending && chatResponses[index] === undefined) ? (\r\n                                            <div className=' text-3xl tracking-widest'>\r\n                                                {loadingDots}\r\n                                            </div>\r\n                                        ) : (\r\n                                            chatResponses[index]\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        ))\r\n                    )   \r\n                }\r\n            </div>\r\n\r\n            <div className='w-full h-[20%] py-3 flex justify-center items-center'>\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"ayo wassup ma home BOYY!!!\" \r\n                    disabled={responsePending}\r\n                    value={message.content} \r\n                    onChange={ handleChange } \r\n                    onKeyDown={ handleKeyDown } \r\n                    className='w-[60%] h-fit px-5 py-3 rounded-lg outline-none border-1 border-gray-300 text-black shadow-[rgba(0,0,0,0.05)_0_0_10px_10px] transition-all duration-300 sm:w-[80%]'></input>\r\n            </div>\r\n        </div>\r\n    </motion.div>\r\n  )\r\n}\r\n\r\nexport default ChatBot","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\constants\\dallePrompts.js",[],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\Loader\\Loader.js",[],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\ChatBot\\DotDotDot\\DotDotDot.js",[],[],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\Auth\\Auth.js",["130"],[],"import React, { useEffect, useState } from 'react'\nimport jwt_decode from \"jwt-decode\";\nimport { useDispatch } from 'react-redux';\nimport { useNavigate  } from \"react-router-dom\"; \nimport { motion } from 'framer-motion';\n\nimport { googleLogin, signup, login } from \"../../redux/User.js\";\n\nimport ShowSVG from \"./ShowSVG/ShowSVG.js\";\nimport HideSVG from \"./HideSVG/HideSVG.js\";\n\nimport \"./Auth.css\";\n\nconst Auth = () => {\n    const CLIENT_ID = \"18229699408-lt9gun1vb3r6moqak9fs3oh21sugscb1.apps.googleusercontent.com\";\n\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n    const [ isSignup, setIsSignup ] = useState(true);\n    const [ passVisible, setPassVisible] = useState(false);\n    const [ formData, setFormData ] = useState({\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        password: \"\",\n        repassword: \"\"\n    })\n    const[formErrors, setFormErrors] = useState({\n        firstNameError: \"\",\n        lastNameError: \"\",\n        emailError: \"\",\n        passwordError: \"\",\n        repasswordError: \"\",\n        accountExists: \"\",\n    });\n\n    const handlePassVisible = (e) => {\n        e.preventDefault();\n\n        passVisible ? setPassVisible(false) : setPassVisible(true);\n    }\n\n    const switchMode = (e) => {\n        e.preventDefault();\n\n        isSignup ? setIsSignup(false) : setIsSignup(true);\n    }\n\n    const handleCallbackResponse = (res) => {\n        googleLogin({result: jwt_decode(res.credential), token: res.credential}, dispatch);\n\n        navigate(\"/\");\n    }\n    useEffect(() => {\n        /* global google */\n\n        google.accounts.id.initialize({\n            client_id: CLIENT_ID,\n            callback: handleCallbackResponse\n        })\n        google.accounts.id.renderButton(\n            document.getElementById(\"googleLogIn\"),\n            { \n                theme: \"outline\", \n                size: \"large\"}\n        );\n\n        },[]);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        \n        let hasError = false;\n\n        const fieldsToValidate = ['firstName', 'lastName', 'email', \"password\"];\n        fieldsToValidate.forEach((field) => {\n        if (formData[field].trim() === '') {\n            console.log(field);\n            hasError = true;\n            setFormErrors((prevFormErrors) => ({...prevFormErrors, [`${field}Error`]: `${field} is required`}));\n        }\n        });\n\n        if(formData.password !== formData.repassword){\n            setFormErrors((prevFormErrors) => ({...prevFormErrors,  repasswordError: \"passwords do not match\"}));\n            hasError = true;\n        }\n\n        if(!hasError){\n            if(isSignup){\n                const res = await signup(formData, navigate, dispatch);\n                \n                if(res.message === \"Account already exists.\"){\n                    setFormErrors((prevFormErrors) => ({...prevFormErrors,  accountExists: res.message}));\n\n                    console.log(formErrors);\n                }\n            }else{\n                login(formData, navigate, dispatch);\n            }\n        }else{\n            console.log(formErrors);\n        }\n    }\n\n    const handleChange = (e) => {\n        setFormData({ ...formData, [e.target.name]: e.target.value});\n        setFormErrors({ ...formErrors, [`${e.target.name}Error`]: '' });\n\n        if(e.target.name === \"email\"){\n            console.log(formErrors);\n            setFormErrors((prevFormErrors) => ({...prevFormErrors,  accountExists: \"\"}));\n        }\n    }\n    \n  return (\n    <motion.div \n        initial={{ opacity: 0 }} \n        animate={{ opacity: 1 }} \n        exit={{ opacity: 0 }} \n        className=\"formContainerContainer\">\n        <div className=\"formContainer sm:h-[80vh] sm:shadow-none\">\n            <h1 className=\"authFormHeader sm:text-2xl\">{ isSignup ? \"Sign Up\" : \"Log In\"}</h1>\n            <form>\n                {\n                    isSignup && (<div className=\"flName\">\n                                    <div className='inputError' style={{width: \"45%\"}}>\n                                        <input type=\"text\" name=\"firstName\" className=\"firstName\" onChange={ handleChange }></input>\n                                        <h5 className=\"lableInput sm:text-lg\">First Name</h5>\n                                        {formErrors.firstNameError && (<div className=\"error\">{formErrors.firstNameError}</div>)}\n                                    </div>\n                                    \n                                    <div className='inputError' style={{width: \"45%\"}}>\n                                        <input type=\"text\" name=\"lastName\" className=\"lastName\" onChange={ handleChange }></input>\n                                        <h5 className=\"lableInput sm:text-lg\">Last Name</h5>\n                                        {formErrors.lastNameError && (<div className=\"error\">{formErrors.lastNameError}</div>)}\n                                    </div>\n                                </div>)\n                }\n                \n                \n                <div className='inputError'>\n                    <input type=\"email\" name=\"email\" className=\"email\" onChange={ handleChange }></input>\n                    <h5 className=\"lableInput sm:text-lg\">E-Mail</h5>\n                    {\n                        formErrors.emailError ? (\n                            <div className=\"error\">{formErrors.emailError}</div>\n                        ) : (\n                            formErrors.accountExists && (\n                                <div className=\"error\">{formErrors.accountExists}</div>\n                            )\n                        )\n                    }\n                </div>\n\n                <div className='inputError'>\n                    <div className=\"passwordContainer\"> \n                        <input type={ passVisible ? \"text\" : \"password\" } name=\"password\" className=\"password\" onChange={ handleChange }></input>\n                        <h5 className=\"lableInput sm:text-lg\">Password</h5>\n                        <button style={{backgroundColor: \"transparent\", border: \"none\"}} onClick={ handlePassVisible }>{passVisible ? <HideSVG /> : <ShowSVG />}</button>\n                    </div>\n\n                    {formErrors.passwordError && (<div className=\"error\">{formErrors.passwordError}</div>)}\n                </div>\n                {\n                    isSignup && (\n                        \n                        <div className='inputError'>\n                            <input type=\"password\" name=\"repassword\" className=\"repassword\" onChange={ handleChange }></input>\n                            <h5 className=\"lableInput sm:text-lg\">Re-Enter Password</h5>\n                            {formErrors.repasswordError && (<div className=\"error\">{formErrors.repasswordError}</div>)}\n                        </div>\n                    )\n                }\n                \n                <div className=\"signupinContainer\">\n                    <button className=\"signupin\" onClick={ handleSubmit }>{ isSignup ? \"Sign Up\" : \"Log In\"}</button>\n                </div>\n\n                <div className=\"googleLogInContainer\">\n                    <div id=\"googleLogIn\"></div>\n                </div>\n            </form>\n                \n            <div className=\"switchContainer\">\n                { \n                    isSignup ? (\n                                <>\n                                    <p>Already have an account? </p>\n                                    <button onClick={switchMode}>Log In</button>\n                                </>\n                    ) : (\n                        <>\n                            <p>Don't have an account yet?</p>\n                            <button onClick={switchMode}>Sign Up</button>\n                        </>  \n                    )\n                }\n            </div>\n        </div>\n    </motion.div>\n\n\n  )\n}\n\nexport default Auth","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\Auth\\ShowSVG\\ShowSVG.js",[],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\Auth\\HideSVG\\HideSVG.js",[],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\redux\\User.js",[],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\redux\\Store.js",[],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\redux\\Images.js",[],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\DalleImages\\DalleImages.js",["131"],[],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { motion } from \"framer-motion\";\r\n\r\nimport { fetchImages } from '../../redux/Images';\r\nimport Image from './DalleImage/DalleImage';\r\nimport Loader from '../Loader/Loader';\r\n\r\n\r\nconst Posts = () => {\r\n    const dispatch = useDispatch();\r\n    const [loading, setLoading] = useState(true);\r\n    const fetchImagesPending = useSelector(state => state.images.pending.fetchImages);\r\n\r\n    useEffect(() => {\r\n        fetchImages(dispatch);\r\n    },[]);\r\n\r\n    useEffect(() => {\r\n        setLoading(fetchImagesPending);\r\n    }, [fetchImagesPending])\r\n\r\n    \r\n\r\n    const imagesInfo = useSelector(state => state.images.imagesInfo);\r\n    const [images, setImages] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setImages(imagesInfo);\r\n    },[imagesInfo]);\r\n\r\n\r\n    return(\r\n        loading ? (\r\n            <div className='w-full h-[calc(100vh-73px)] flex justify-center items-center'>\r\n                <div className='flex flex-col justify-center items-center'>\r\n                    <Loader />\r\n                    <h1 className='mt-5'>Fetching Data...</h1>\r\n                </div>\r\n            </div>\r\n        ) : (\r\n            (images?.length === 0) ? (\r\n                <h1>Be the first to post!</h1>\r\n            ) : (\r\n                <motion.div \r\n                    initial={{ opacity: 0 }} \r\n                    animate={{ opacity: 1 }} \r\n                    exit={{ opacity: 0 }}\r\n                    transition={{ duration: 0.75}}\r\n                    className='h-fit min-h-[calc(100vh-73px)] w-full px-10 flex bg-slate-50 justify-between sm:flex-col'>\r\n\r\n                    <div className='mt-10 grid grid-cols-[repeat(5,19%)] gap-y-5 gap-x-5'>\r\n                    {\r\n                        images.map( (image, index) => (\r\n                            <div key={image._id} className={` ${(index === 1) && (\"row-start-1 col-start-1 row-end-3 col-end-3\")}`}>\r\n                                <Image imageInfo={image} index={index}/>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                    </div>\r\n                </motion.div>\r\n            )\r\n        )\r\n  );\r\n}\r\n\r\nexport default Posts","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\DalleImages\\DalleImage\\DalleImage.js",["132"],[],"import React from 'react'\r\n\r\nconst Image = ({ imageInfo, index }) => {\r\n  return (\r\n    <div className={`border-solid px-8 bg-white shadow-2xl rounded-lg`}>\r\n      <div className=' text-2xl'>\r\n        {imageInfo.name}\r\n      </div>\r\n\r\n      <div className='w-full'>\r\n        <img src={imageInfo.generatedImage}></img>\r\n      </div>\r\n\r\n      <div className='py-5 break-words'>\r\n        {imageInfo.prompt}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Image","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\TSST\\TSST.js",["133","134","135"],[],"import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nimport Microphone from \"./Microphone/Microphone\";\r\nconst TSST = () => {\r\n  const BASE_URL = process.env.REACT_APP_SERVER_URL || \"http://localhost:5000\";\r\n\r\n  const mediaRecorder = useRef(null);\r\n  const [stream, setStream] = useState(null);\r\n  const [audioChunks, setAudioChunks] = useState([]);\r\n  const [audio, setAudio] = useState(null);\r\n  const [audioFile, setAudioFile] = useState(null);\r\n  const [transcribtion, setTranscription] = useState(\"\");\r\n  const [audioBlob, setAudioBlob] = useState(\"\");\r\n  const [audioBuffer, setAudioBuffer] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const initializeMediaRecorder = async () => {\r\n      if (\"MediaRecorder\" in window) {\r\n        try {\r\n            const streamData = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n            setStream(streamData);\r\n        } catch (err) {\r\n            console.log(err.message);\r\n        }\r\n      } else {\r\n          console.log(\"The MediaRecorder API is not supported in your browser.\");\r\n      }\r\n    }\r\n\r\n    initializeMediaRecorder();\r\n  }, [])\r\n\r\n  const handleStartRecording = () => {\r\n    const media = new MediaRecorder(stream, { type: \"audio/wav\" });\r\n\r\n    mediaRecorder.current = media;\r\n    mediaRecorder.current.start();\r\n\r\n    let chunks = [];\r\n    mediaRecorder.current.ondataavailable = (e) => {\r\n       chunks.push(e.data);\r\n    };\r\n    setAudioChunks(chunks);\r\n  }\r\n  const handleStopRecording = () => {\r\n    mediaRecorder.current.stop();\r\n    mediaRecorder.current.onstop = () => {\r\n      const audioBlob = new Blob(audioChunks, { type: \"audio/wav\" });\r\n      const audioUrl = URL.createObjectURL(audioBlob);\r\n\r\n      setAudioBlob(audioBlob)\r\n      setAudio(audioUrl);\r\n      setAudioChunks([]);\r\n\r\n      let file = new File([audioUrl], \"recorded_audio.wav\",{type:\"audio/wav\", lastModified:new Date().getTime()});\r\n      let container = new DataTransfer();\r\n      container.items.add(file);\r\n      document.getElementById(\"audioFile\").files = container.files;\r\n      setAudioFile(container.files[0]);\r\n\r\n      console.log(file);\r\n    };\r\n  }\r\n\r\n  const handleSubmitRecording = async () => {\r\n    try {\r\n      // Assuming you have an audio blob called 'audioBlob'\r\n\r\n      // Convert the audio blob to a base64 string\r\n      const reader = new FileReader();\r\n      reader.onloadend = async () => {\r\n        const base64String = reader.result.split(',')[1]; // Extract base64 data from the result\r\n        const res = await fetch(`${BASE_URL}/api/openai/transcriber`, {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({ audioBuffer: base64String, lang: \"en\" })\r\n        })\r\n        const data = await res.json();\r\n        setTranscription(data);\r\n      };\r\n      reader.readAsDataURL(audioBlob);\r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n\r\n    } finally {\r\n    }\r\n  }\r\n\r\n    return (\r\n      <div className=\"h-[calc(100vh-73px)] flex justify-center items-center\">\r\n        <div className=\"w-[40%] flex justify-between items-center\">\r\n          <div className=\"flex flex-col\">\r\n            <Microphone startFunction={ handleStartRecording } stopFunction={ handleStopRecording } />\r\n            <button onClick={handleStartRecording} className=\"w-fit my-10 p-5 bg-gray-200 rounded-lg\">Start Recording</button>\r\n            <button onClick={handleStopRecording} className=\"w-fit mb-10 p-5 bg-gray-200 rounded-lg\">Stop Recording</button>\r\n\r\n            <audio className=\"mb-10\" src={audio && audio} controls></audio>\r\n            <input id=\"audioFile\" type=\"file\" onChange={ (e) => {setAudioFile(e.target.files[0])}}/>\r\n          </div>\r\n          \r\n          <div>\r\n            <button className=\"p-10 bg-yellow-500 rounded-xl\" onClick={ handleSubmitRecording } >Submit</button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"w-[40%] flex justify-center items-center\">\r\n          <textarea value={transcribtion} readOnly className=\"w-[60%] aspect-square resize-none shadow-lg shadow-black\"></textarea>\r\n        </div>\r\n      </div>\r\n    );\r\n};\r\nexport default TSST;","C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\SummarizeURL\\SummarizeURL.js",[],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\Translator\\Translator.js",[],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\constants\\languages.js",[],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\TSST\\Microphone\\Microphone.js",[],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\Main\\Main.js",[],[],"C:\\Users\\User\\Desktop\\aihubcentral\\client\\src\\components\\Footer\\Footer.js",["136","137"],[],"import React from 'react';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"bg-gray-900\">\r\n      <div className=\"container mx-auto px-6 py-10\">\r\n        <div className=\"sm:flex sm:items-center sm:justify-between\">\r\n          <div className=\"mb-10 sm:w-1/2 sm:mb-0 sm:h-full sm:mr-5\">\r\n            <h3 className=\"text-2xl font-bold text-white mb-2\">About AI Hub Central</h3>\r\n            <p className=\"text-gray-400\">AI Hub Central is a platform where multiple AI technologies are merged into a single simple to use website.</p>\r\n          </div>\r\n          <div className=\"sm:w-1/2 sm:h-full\">\r\n            <h3 className=\"text-2xl font-bold text-white mb-2\">Contact Us</h3>\r\n            <ul className=\"text-gray-400\">\r\n              <li>Email: business.ali.z.jalloul@gmail.com</li>\r\n              <li><a href=\"https://github.com/alijalloul\" target='_blank'>Github: @alijalloul</a></li>\r\n              <li><a href=\"https://www.youtube.com/@JackTrade-om3pv\" target='_blank'>YouTube: @JackTrade</a></li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <hr className=\"my-12 border-gray-600\" />\r\n        <p className=\"text-center text-gray-400 text-sm\">&copy; 2023 AI Hub Central. All rights reserved.</p>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n",{"ruleId":"138","severity":1,"message":"139","line":8,"column":8,"nodeType":"140","messageId":"141","endLine":8,"endColumn":19},{"ruleId":"142","severity":1,"message":"143","line":26,"column":7,"nodeType":"144","endLine":26,"endColumn":17,"suggestions":"145"},{"ruleId":"138","severity":1,"message":"146","line":2,"column":10,"nodeType":"140","messageId":"141","endLine":2,"endColumn":21},{"ruleId":"142","severity":1,"message":"147","line":58,"column":7,"nodeType":"144","endLine":58,"endColumn":13,"suggestions":"148"},{"ruleId":"142","severity":1,"message":"149","line":69,"column":11,"nodeType":"144","endLine":69,"endColumn":13,"suggestions":"150"},{"ruleId":"142","severity":1,"message":"151","line":17,"column":7,"nodeType":"144","endLine":17,"endColumn":9,"suggestions":"152"},{"ruleId":"153","severity":1,"message":"154","line":11,"column":9,"nodeType":"155","endLine":11,"endColumn":45},{"ruleId":"138","severity":1,"message":"156","line":11,"column":10,"nodeType":"140","messageId":"141","endLine":11,"endColumn":19},{"ruleId":"138","severity":1,"message":"157","line":14,"column":10,"nodeType":"140","messageId":"141","endLine":14,"endColumn":21},{"ruleId":"138","severity":1,"message":"158","line":14,"column":23,"nodeType":"140","messageId":"141","endLine":14,"endColumn":37},{"ruleId":"159","severity":1,"message":"160","line":16,"column":19,"nodeType":"155","messageId":"161","endLine":16,"endColumn":75,"fix":"162"},{"ruleId":"159","severity":1,"message":"160","line":17,"column":19,"nodeType":"155","messageId":"161","endLine":17,"endColumn":86,"fix":"163"},"no-unused-vars","'DalleImages' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'navigate', and 'user?.token'. Either include them or remove the dependency array.","ArrayExpression",["164"],"'useDispatch' is defined but never used.","React Hook useEffect has missing dependencies: 'BASE_URL' and 'chatResponses'. Either include them or remove the dependency array. You can also do a functional update 'setChatResponses(c => ...)' if you only need 'chatResponses' in the 'setChatResponses' call.",["165"],"React Hook useEffect has a missing dependency: 'handleCallbackResponse'. Either include it or remove the dependency array.",["166"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["167"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'audioFile' is assigned a value but never used.","'audioBuffer' is assigned a value but never used.","'setAudioBuffer' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"168","text":"169"},{"range":"170","text":"169"},{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},[869,869]," rel=\"noreferrer\"",[984,984],"Update the dependencies array to be: [dispatch, location, navigate, user?.token]",{"range":"179","text":"180"},"Update the dependencies array to be: [BASE_URL, chat, chatResponses]",{"range":"181","text":"182"},"Update the dependencies array to be: [handleCallbackResponse]",{"range":"183","text":"184"},"Update the dependencies array to be: [dispatch]",{"range":"185","text":"186"},[868,878],"[dispatch, location, navigate, user?.token]",[1854,1860],"[BASE_URL, chat, chatResponses]",[1907,1909],"[handleCallbackResponse]",[554,556],"[dispatch]"]