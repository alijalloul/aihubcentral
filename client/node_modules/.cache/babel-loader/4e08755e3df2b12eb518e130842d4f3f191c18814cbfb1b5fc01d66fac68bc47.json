{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst BASE_URL = process.env.REACT_APP_SERVER_URL || \"http://localhost:5000\";\n//const BASE_URL = \"https://server-y1as.onrender.com\";\n\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    userInfo: {},\n    pending: false,\n    error: false\n  },\n  reducers: {\n    startAPI: state => {\n      state.pending = true;\n    },\n    loginSuccess: (state, action) => {\n      state.pending = false;\n      localStorage.setItem('profile', JSON.stringify({\n        ...(action === null || action === void 0 ? void 0 : action.payload)\n      }));\n      state.userInfo = action === null || action === void 0 ? void 0 : action.payload.result;\n    },\n    logoutSuccess: state => {\n      state.pending = false;\n      state.userInfo = null;\n      localStorage.clear();\n    },\n    errorAPI: state => {\n      state.pending = null;\n      state.error = true;\n    }\n  }\n});\nexport const googleLogin = (userInfo, dispatch) => {\n  dispatch(userSlice.actions.startAPI());\n  try {\n    dispatch(userSlice.actions.loginSuccess(userInfo));\n  } catch (error) {\n    dispatch(userSlice.actions.errorAPI());\n    console.log(\"error: \", error);\n  }\n};\nexport const login = async (userInfo, navigate, dispatch) => {\n  dispatch(userSlice.actions.startAPI());\n  try {\n    const res = await fetch(`${BASE_URL}/users/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(userInfo)\n    });\n    const data = await res.json();\n    console.log();\n    dispatch(userSlice.actions.loginSuccess(data));\n    navigate(\"/\");\n  } catch (error) {\n    dispatch(userSlice.actions.errorAPI());\n    console.log(\"error: \", error);\n  }\n};\nexport const signup = async (userInfo, navigate, dispatch) => {\n  dispatch(userSlice.actions.startAPI());\n  try {\n    const res = await fetch(`${BASE_URL}/users/signup`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(userInfo)\n    });\n    const data = await res.json();\n    if ((data === null || data === void 0 ? void 0 : data.message) === \"Account already exists.\") {\n      return data;\n    }\n    dispatch(userSlice.actions.loginSuccess(data));\n    navigate(\"/\");\n  } catch (error) {\n    dispatch(userSlice.actions.errorAPI());\n    console.log(\"error: \", error);\n  }\n};\nexport const logout = (navigate, dispatch) => {\n  dispatch(userSlice.actions.startAPI());\n  try {\n    dispatch(userSlice.actions.logoutSuccess());\n    navigate(\"/\");\n  } catch (error) {\n    dispatch(userSlice.actions.errorAPI());\n    console.log(\"error: \", error);\n  }\n};\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","BASE_URL","process","env","REACT_APP_SERVER_URL","userSlice","name","initialState","userInfo","pending","error","reducers","startAPI","state","loginSuccess","action","localStorage","setItem","JSON","stringify","payload","result","logoutSuccess","clear","errorAPI","googleLogin","dispatch","actions","console","log","login","navigate","res","fetch","method","headers","body","data","json","signup","message","logout","reducer"],"sources":["C:/Users/User/Desktop/aihubcentral/client/src/redux/User.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst BASE_URL = process.env.REACT_APP_SERVER_URL || \"http://localhost:5000\";\n//const BASE_URL = \"https://server-y1as.onrender.com\";\n\nconst userSlice = createSlice({\n    name: \"user\",\n    initialState: {\n        userInfo: {},\n        pending: false,\n        error: false\n    },\n    reducers: {\n        startAPI: (state) => {\n            state.pending = true;\n        },\n        loginSuccess: (state, action) => {\n            state.pending = false;\n            localStorage.setItem('profile', JSON.stringify({ ...action?.payload}));\n            state.userInfo = action?.payload.result;\n        },\n        logoutSuccess: (state) => {\n            state.pending = false;\n            state.userInfo = null;\n            localStorage.clear();\n        },\n        errorAPI: (state) => {\n            state.pending = null;\n            state.error = true;\n        }\n    }\n});\n\nexport const googleLogin = (userInfo, dispatch) => {\n    dispatch(userSlice.actions.startAPI());\n\n    try {\n        dispatch(userSlice.actions.loginSuccess(userInfo));\n    } catch (error) {\n        dispatch(userSlice.actions.errorAPI());\n        console.log(\"error: \", error);\n    }\n}\nexport const login = async (userInfo, navigate, dispatch) => {\n    dispatch(userSlice.actions.startAPI());\n\n    try {\n        \n        const res = await fetch(`${BASE_URL}/users/login`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(userInfo)\n        });\n\n        const data = await res.json();\n        console.log();\n        \n        dispatch(userSlice.actions.loginSuccess(data));\n\n        navigate(\"/\");\n    } catch (error) {\n        dispatch(userSlice.actions.errorAPI());\n        console.log(\"error: \", error);\n    }\n}\nexport const signup = async (userInfo, navigate, dispatch) => {\n    dispatch(userSlice.actions.startAPI());\n\n    try {\n        \n        const res = await fetch(`${BASE_URL}/users/signup`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(userInfo)\n        });\n\n        const data = await res.json();\n\n        if(data?.message === \"Account already exists.\"){\n            return data;\n        }\n\n        dispatch(userSlice.actions.loginSuccess(data));\n        navigate(\"/\");\n    } catch (error) {\n        dispatch(userSlice.actions.errorAPI());\n        console.log(\"error: \", error);\n    }\n}\nexport const logout = (navigate, dispatch) => {\n    dispatch(userSlice.actions.startAPI());\n\n    try {\n        dispatch(userSlice.actions.logoutSuccess());\n\n        navigate(\"/\");\n    } catch (error) {\n        dispatch(userSlice.actions.errorAPI());\n        console.log(\"error: \", error);\n    }\n}\n\nexport default userSlice.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}