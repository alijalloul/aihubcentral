{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\OpenAIAPI\\\\client\\\\src\\\\components\\\\ChatBot\\\\ChatBot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBot = () => {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  const [chat, setChat] = useState([]);\n  const handleChange = e => {\n    setMessage(e.target.value);\n    console.log(message);\n  };\n  const handleKeyDown = async e => {\n    if (e.key === 'Enter') {\n      setChat([...chat, message]);\n      setMessage(\"\");\n      const res = await fetch(\"http://localhost:5000/api/openai/chatGPT\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          chat: chat\n        })\n      });\n      const data = await res.json();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-[calc(100vh-73px)] w-full px-10 flex min-h-fit bg-[rgb(43,47,79)] justify-between\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-10 w-full\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"ayo wassup ma home BOYY!!!\",\n        value: message,\n        onChange: handleChange,\n        onKeyDown: handleKeyDown,\n        className: \"w-full h-fit px-5 py-3 rounded-sm outline-1 bg-gray-600 text-white focus:outline focus:outline-[rgb(0,255,123)] focus:shadow-[rgba(0,255,123,0.2)_0_0_10px_10px] transition-all duration-300\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBot, \"81jSdZy3H9tlzQXMnPiAZ4hy1TE=\");\n_c = ChatBot;\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ChatBot","_s","message","setMessage","chat","setChat","handleChange","e","target","value","console","log","handleKeyDown","key","res","fetch","method","headers","body","JSON","stringify","data","json","className","children","type","placeholder","onChange","onKeyDown","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/OpenAIAPI/client/src/components/ChatBot/ChatBot.js"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst ChatBot = () => {\r\n    const [message, setMessage] = useState(\"\");\r\n    const [chat, setChat] = useState([]);\r\n    \r\n    const handleChange = (e) => {\r\n        setMessage(e.target.value);\r\n        console.log(message);\r\n    }\r\n    const handleKeyDown = async (e) => {\r\n        if (e.key === 'Enter') {\r\n          setChat([...chat, message]);\r\n          setMessage(\"\");\r\n\r\n          const res = await fetch(\"http://localhost:5000/api/openai/chatGPT\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({ chat: chat }),\r\n        });\r\n        \r\n        const data = await res.json();\r\n        }\r\n      };\r\n\r\n  return (\r\n    <div className='h-[calc(100vh-73px)] w-full px-10 flex min-h-fit bg-[rgb(43,47,79)] justify-between'>\r\n        <div className='mt-10 w-full'>\r\n            <input type=\"text\" placeholder=\"ayo wassup ma home BOYY!!!\" value={message} onChange={ handleChange } onKeyDown={ handleKeyDown } className='w-full h-fit px-5 py-3 rounded-sm outline-1 bg-gray-600 text-white focus:outline focus:outline-[rgb(0,255,123)] focus:shadow-[rgba(0,255,123,0.2)_0_0_10px_10px] transition-all duration-300'></input>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChatBot"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMS,YAAY,GAAIC,CAAC,IAAK;IACxBJ,UAAU,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IAC1BC,OAAO,CAACC,GAAG,CAACT,OAAO,CAAC;EACxB,CAAC;EACD,MAAMU,aAAa,GAAG,MAAOL,CAAC,IAAK;IAC/B,IAAIA,CAAC,CAACM,GAAG,KAAK,OAAO,EAAE;MACrBR,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAEF,OAAO,CAAC,CAAC;MAC3BC,UAAU,CAAC,EAAE,CAAC;MAEd,MAAMW,GAAG,GAAG,MAAMC,KAAK,CAAC,0CAA0C,EAAE;QACpEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEhB,IAAI,EAAEA;QAAK,CAAC;MACrC,CAAC,CAAC;MAEF,MAAMiB,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAI,EAAE;IAC7B;EACF,CAAC;EAEL,oBACEvB,OAAA;IAAKwB,SAAS,EAAC,qFAAqF;IAAAC,QAAA,eAChGzB,OAAA;MAAKwB,SAAS,EAAC,cAAc;MAAAC,QAAA,eACzBzB,OAAA;QAAO0B,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC,4BAA4B;QAACjB,KAAK,EAAEP,OAAQ;QAACyB,QAAQ,EAAGrB,YAAc;QAACsB,SAAS,EAAGhB,aAAe;QAACW,SAAS,EAAC;MAA8L;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAS;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACjV;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEV,CAAC;AAAA/B,EAAA,CAhCKD,OAAO;AAAAiC,EAAA,GAAPjC,OAAO;AAkCb,eAAeA,OAAO;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}