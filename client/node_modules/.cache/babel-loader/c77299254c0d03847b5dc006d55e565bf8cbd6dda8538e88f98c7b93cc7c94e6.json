{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\OpenAIAPI\\\\client\\\\src\\\\components\\\\ChatBot\\\\ChatBot.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport DotDotDot from './DotDotDot/DotDotDot';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBot = () => {\n  _s();\n  const [responsePending, setResponsePending] = useState(false);\n  const [message, setMessage] = useState({\n    role: \"\",\n    content: \"\"\n  });\n  const [chat, setChat] = useState([]);\n  const [chatResponses, setChatResponses] = useState([]);\n  const handleChange = e => {\n    setMessage({\n      role: \"user\",\n      content: e.target.value\n    });\n  };\n  const handleKeyDown = async e => {\n    if (e.key === 'Enter') {\n      setChat(prevChat => [...prevChat, message]);\n      setMessage({\n        role: \"\",\n        content: \"\"\n      });\n    }\n  };\n  useEffect(() => {\n    console.log(chat);\n    const post = async () => {\n      try {\n        setResponsePending(true);\n        const res = await fetch(\"http://localhost:5000/api/openai/chatGPT\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            chat: chat\n          })\n        });\n        const data = await res.json();\n        setChatResponses([...chatResponses, data.chatResponse]);\n        setResponsePending(false);\n      } catch (error) {\n        alert(error);\n        setResponsePending(false);\n      } finally {\n        setResponsePending(false);\n      }\n    };\n    if (chat.length > 0) {\n      post();\n    }\n  }, [chat]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-[calc(100vh-73px)] w-full min-h-fit bg-[#343541]\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full h-[85%] px-20 py-10 flex flex-col overflow-y-scroll\",\n      style: {\n        scrollbarWidth: \"thin\"\n      },\n      children: chat.length > 0 && chat.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full h-fit mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            float: 'left'\n          },\n          className: \"bg-gray-100 w-fit px-5 py-3 rounded-r-lg rounded-t-lg\",\n          children: message.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            float: 'right'\n          },\n          className: \"bg-[#10a37f] w-fit px-5 py-3 rounded-l-lg rounded-t-lg mt-10 break-words max-w-md\",\n          children: responsePending ? /*#__PURE__*/_jsxDEV(DotDotDot, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 41\n          }, this) :\n          //<DotDotDot />\n          chatResponses[index]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" bg-[#33363f] w-full h-[15%] py-3 flex justify-center items-center border-t-[1px] border-[rgb(0,255,123)]\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"ayo wassup ma home BOYY!!!\",\n        value: message.content,\n        onChange: handleChange,\n        onKeyDown: handleKeyDown,\n        className: \"w-[80%] h-fit px-5 py-3 rounded-sm outline-1 bg-[#40414f] text-white focus:outline focus:outline-[rgb(0,255,123)] focus:shadow-[rgba(0,255,123,0.2)_0_0_5px_5px] transition-all duration-300\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBot, \"JTZDDjPaZjGJFXKMoEvPHhqYaG0=\");\n_c = ChatBot;\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useEffect","useState","DotDotDot","jsxDEV","_jsxDEV","ChatBot","_s","responsePending","setResponsePending","message","setMessage","role","content","chat","setChat","chatResponses","setChatResponses","handleChange","e","target","value","handleKeyDown","key","prevChat","console","log","post","res","fetch","method","headers","body","JSON","stringify","data","json","chatResponse","error","alert","length","className","children","style","scrollbarWidth","map","index","float","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onKeyDown","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/OpenAIAPI/client/src/components/ChatBot/ChatBot.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\n\r\nimport DotDotDot from './DotDotDot/DotDotDot';\r\n\r\nconst ChatBot = () => {\r\n    const [responsePending, setResponsePending] = useState(false);\r\n\r\n    const [message, setMessage] = useState({\r\n        role: \"\",\r\n        content: \"\"\r\n    });\r\n    const [chat, setChat] = useState([]);\r\n    const [chatResponses, setChatResponses]= useState([]);\r\n    \r\n    const handleChange = (e) => {\r\n        setMessage({role:\"user\", content:e.target.value});\r\n    }\r\n    const handleKeyDown = async (e) => {\r\n        if (e.key === 'Enter') {\r\n            setChat((prevChat) => [...prevChat, message])\r\n            setMessage({role:\"\", content:\"\"});\r\n        }        \r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log(chat);\r\n\r\n        const post = async() => {\r\n            try {\r\n                setResponsePending(true);\r\n\r\n                const res = await fetch(\"http://localhost:5000/api/openai/chatGPT\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({ chat: chat }),\r\n                });\r\n                \r\n                const data = await res.json();\r\n\r\n                setChatResponses([...chatResponses, data.chatResponse]);\r\n\r\n                setResponsePending(false);\r\n            } catch (error) {\r\n                alert(error);\r\n\r\n                setResponsePending(false);\r\n            } finally{\r\n                setResponsePending(false);\r\n            }\r\n        }\r\n\r\n        if(chat.length > 0) {post();}\r\n    },[chat]);\r\n\r\n  return (\r\n    <div className='h-[calc(100vh-73px)] w-full min-h-fit bg-[#343541]'>\r\n        <div className='w-full h-[85%] px-20 py-10 flex flex-col overflow-y-scroll' style={{scrollbarWidth: \"thin\"}}>\r\n            {\r\n                (chat.length > 0) && (\r\n                    chat.map((message, index) => (\r\n                        <div className='w-full h-fit mb-3' key={index} >\r\n                            <div style={{ float: 'left' }} className='bg-gray-100 w-fit px-5 py-3 rounded-r-lg rounded-t-lg'>\r\n                                {message.content}\r\n                            </div>\r\n\r\n                            <div style={{ float: 'right' }} className='bg-[#10a37f] w-fit px-5 py-3 rounded-l-lg rounded-t-lg mt-10 break-words max-w-md'>\r\n                                {\r\n                                    responsePending ? (\r\n                                        <DotDotDot />\r\n                                    ) : (\r\n                                        //<DotDotDot />\r\n                                        chatResponses[index]\r\n                                    )\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                )   \r\n            }\r\n        </div>\r\n\r\n        <div className=' bg-[#33363f] w-full h-[15%] py-3 flex justify-center items-center border-t-[1px] border-[rgb(0,255,123)]'>\r\n            <input type=\"text\" placeholder=\"ayo wassup ma home BOYY!!!\" value={message.content} onChange={ handleChange } onKeyDown={ handleKeyDown } className='w-[80%] h-fit px-5 py-3 rounded-sm outline-1 bg-[#40414f] text-white focus:outline focus:outline-[rgb(0,255,123)] focus:shadow-[rgba(0,255,123,0.2)_0_0_5px_5px] transition-all duration-300'></input>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChatBot"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}