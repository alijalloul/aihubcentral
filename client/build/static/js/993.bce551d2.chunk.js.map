{"version":3,"file":"static/js/993.bce551d2.chunk.js","mappings":"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","sources":["components/ChatBot/ChatBot.js","components/CodeEditor/CodeEditor.js","components/LoadingDots/LoadingDots.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { LazyMotion, domAnimation, m } from \"framer-motion\";\r\n\r\nimport CodeEditor from '../CodeEditor/CodeEditor';\r\nimport LoadingDots from '../LoadingDots/LoadingDots';\r\n\r\nconst ChatBot = () => {\r\n    const userInfo = useSelector(state => state?.user?.userInfo);\r\n    const BASE_URL = process.env.REACT_APP_SERVER_URL || \"http://localhost:5000\";\r\n\r\n    const excludedDivRef = useRef();\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const [chatsCounter, setChatsCounter] = useState(1);\r\n\r\n    const [selectedChat, setSelectedChat] = useState(0);\r\n\r\n    const [chatsName, setChatsNames] = useState([\"Chat 1\"]);\r\n    const [changeNameState, setChangeNameState] = useState(false);\r\n    const [newName, setNewName] = useState(\"\");\r\n    const [nameChangeIndex, setChangeNameIndex] = useState(null);\r\n\r\n    const [chats, setChats] = useState([[]]);\r\n    const [chatsResponses, setChatsResponses]= useState([[]]);\r\n    const [message, setMessage] = useState({\r\n        role: \"\",\r\n        content: \"\"\r\n    });\r\n    \r\n    const sendChat = async (selectedChatProp, chatsProp) => {\r\n        try {\r\n            const res = await fetch(`${BASE_URL}/api/openai/chatGPT`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({ chat: chatsProp[selectedChatProp] }),\r\n            });\r\n            \r\n            const data = await res.json();\r\n\r\n            if (data !== undefined && data.chatResponse !== undefined) {\r\n                const updatedResponses = await Promise.resolve(chatsResponses[selectedChatProp]).then((prevChatResponses) =>\r\n                  [...prevChatResponses, data.chatResponse]\r\n                );\r\n                setChatsResponses((prevChatsResponses) =>\r\n                prevChatsResponses.map((prevChatResponses, index) =>\r\n                    (index === selectedChatProp)? updatedResponses : prevChatResponses\r\n                  )\r\n                );\r\n            \r\n                setLoading(false);\r\n              }\r\n        } catch (error) {\r\n            console.log(error);\r\n\r\n            setLoading(false);\r\n        } finally{\r\n            console.log(\"finally\");\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    const handleMessageChange = (e) => {\r\n        setMessage({role:\"user\", content:e.target.value});\r\n    }\r\n    const handleMessageKeyDown = async (e) => {\r\n        if (e.key === 'Enter') {\r\n            setChats(prevChats => {\r\n                const newChats = prevChats.map((prevChat, index) => {\r\n                    if (index === selectedChat) {\r\n                        return [...prevChat, message];\r\n                    } else {\r\n                        return prevChat;\r\n                    }\r\n                });\r\n                sendChat(selectedChat, newChats);\r\n                return newChats;\r\n            });\r\n            setMessage({role:\"\", content:\"\"});\r\n            setLoading(true);\r\n        }        \r\n    };\r\n    const handleNameChange = (e) => {\r\n        setNewName(e.target.value);\r\n    }\r\n    const handleNameKeyDown = async (e) => {\r\n        if (e.key === 'Enter') {\r\n            console.log(\"newname\", e.target)\r\n            setChatsNames(prevChatsName => prevChatsName.filter((prevChatName, index) => (index === e.target.key) ? newName : prevChatName ));\r\n            setChangeNameState(false);\r\n            setNewName(\"\");\r\n        }        \r\n    };\r\n\r\n    useEffect(() => {\r\n        // Event listener for clicks outside of the excluded div\r\n        function handleClickOutside(event) {\r\n            if(excludedDivRef.current && !excludedDivRef.current.contains(event.target) ) {\r\n                setChangeNameState(false);\r\n                console.log(\"cat\");\r\n            }\r\n        }\r\n\r\n        excludedDivRef?.current?.focus();\r\n    \r\n        // Add event listener when component mounts\r\n        if (changeNameState) {\r\n          window.addEventListener(\"mousedown\", handleClickOutside);\r\n        }\r\n    \r\n        // Remove event listener when component unmounts\r\n        return () => {\r\n          window.removeEventListener(\"mousedown\", handleClickOutside);\r\n        };\r\n      }, [changeNameState]);\r\n  return (\r\n    <LazyMotion features={domAnimation}> \r\n      <m.div  \r\n        initial={{ opacity: 0 }} \r\n        animate={{ opacity: 1 }}\r\n        exit={{ opacity: 0 }} \r\n        className='h-[calc(100vh-73px)] w-full flex bg-slate-50 md:h-[calc(100vh-120px)]'>\r\n        <div className='float-left bg-[#202123] w-[20vw] shadow-xl shadow-black relative z-1 md:hidden'>\r\n            {\r\n                (userInfo) ? (\r\n                    <div className='h-full px-5 flex justify-between items-center text-white'>\r\n                        <div className='w-full h-[90%] flex items-center flex-col justify-between'>\r\n                            <div className='w-full flex flex-col'>\r\n                                {\r\n                                    chats.map((_, index1) => (\r\n                                        <div key={index1} className={`flex justify-end items-center w-full h-12 mb-1 px-2 rounded-lg ${(selectedChat===index1 ) && \"bg-[#454757]\" } hover:bg-[#6b6e82]  transition-all`}>\r\n                                            \r\n                                            \r\n                                            {\r\n                                                (changeNameState && index1 === nameChangeIndex) ? (\r\n                                                    <div className='relative w-[80%] h-[60%]'>\r\n                                                        <input \r\n                                                        ref={(index1 === nameChangeIndex) ? excludedDivRef : null}\r\n                                                        key={index1}\r\n                                                        value={newName}\r\n                                                        onChange={handleNameChange}\r\n                                                        onKeyDown={(e) => {\r\n                                                            if (e.key === 'Enter') {\r\n                                                                setChatsNames(prevChatsName => prevChatsName.map((prevChatName, index2) => (index2 === index1) ?  ((newName === \"\") ? prevChatName : newName) : prevChatName));\r\n                                                                setChangeNameState(false);\r\n                                                            }   \r\n                                                        }}\r\n                                                        className={`w-full h-full bg-transparent focus:outline-none transition-all ease-in-out duration-200`}></input>\r\n                                                    </div>\r\n                                                ) : (\r\n                                                    <button onClick={() => {setSelectedChat(index1)}} className={` w-[80%] h-full`}>{chatsName[index1]}</button>\r\n                                                )\r\n                                            }\r\n                                            <div className='flex justify-between items-center w-[20%] h-[80%]'>\r\n                                                <button onMouseUp={() => {setChangeNameState(true); setChangeNameIndex(index1); setNewName(chatsName.filter((prevChatName, index2) => (index2 === index1) && prevChatName)[0])}}>\r\n                                                    <svg width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" fill=\"rgb(200,200,200)\" xmlns=\"http://www.w3.org/2000/svg\" className=' hover:fill-[rgb(240,240,240)] transition-all ease-in-out'>\r\n                                                        <g id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\"></g>\r\n                                                        <g id=\"SVGRepo_tracerCarrier\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></g>\r\n                                                        <g id=\"SVGRepo_iconCarrier\"> \r\n                                                            <g id=\"Edit / Edit_Pencil_Line_02\"> \r\n                                                                <path id=\"Vector\" d=\"M4 20.0001H20M4 20.0001V16.0001L14.8686 5.13146L14.8704 5.12976C15.2652 4.73488 15.463 4.53709 15.691 4.46301C15.8919 4.39775 16.1082 4.39775 16.3091 4.46301C16.5369 4.53704 16.7345 4.7346 17.1288 5.12892L18.8686 6.86872C19.2646 7.26474 19.4627 7.46284 19.5369 7.69117C19.6022 7.89201 19.6021 8.10835 19.5369 8.3092C19.4628 8.53736 19.265 8.73516 18.8695 9.13061L18.8686 9.13146L8 20.0001L4 20.0001Z\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></path> \r\n                                                            </g> \r\n                                                        </g>\r\n                                                    </svg>\r\n                                                </button>\r\n                                                <button onClick={() => {\r\n                                                    if(selectedChat > 0){\r\n                                                        setSelectedChat(prevSelectedChat => prevSelectedChat - 1)\r\n                                                    }else{\r\n                                                        setSelectedChat(0)\r\n                                                    } \r\n                                                    if(chats.length > 1){\r\n                                                        setChats(prevChats => prevChats.filter((_, index2) => index2 !== index1)); \r\n                                                        setChatsResponses(prevChatsResponses => prevChatsResponses.filter((_, index2) => index2 !== index1));\r\n                                                        setChatsNames(prevChatsNames => prevChatsNames.filter((_, index2) => index2 !== index1));\r\n                                                    }\r\n                                                }} \r\n                                                className={`relative z-20 w-fit h-fit`}>\r\n                                                    <svg width=\"15px\" height=\"15px\" viewBox=\"0 -0.5 21 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" fill=\"white\"  className=' hover:fill-red-500 transition-all ease-in-out'>\r\n                                                        <g id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\"></g>\r\n                                                        <g id=\"SVGRepo_tracerCarrier\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></g>\r\n                                                        <g id=\"SVGRepo_iconCarrier\"> \r\n                                                            <title>delete [#1487]</title> \r\n                                                            <desc>Created with Sketch.</desc> \r\n                                                            <defs> </defs> \r\n                                                            <g id=\"Page-1\" stroke=\"none\" strokewidth=\"1\"fillRule=\"evenodd\"> \r\n                                                                <g id=\"Dribbble-Light-Preview\" transform=\"translate(-179.000000, -360.000000)\"> \r\n                                                                    <g id=\"icons\" transform=\"translate(56.000000, 160.000000)\"> \r\n                                                                        <path d=\"M130.35,216 L132.45,216 L132.45,208 L130.35,208 L130.35,216 Z M134.55,216 L136.65,216 L136.65,208 L134.55,208 L134.55,216 Z M128.25,218 L138.75,218 L138.75,206 L128.25,206 L128.25,218 Z M130.35,204 L136.65,204 L136.65,202 L130.35,202 L130.35,204 Z M138.75,204 L138.75,200 L128.25,200 L128.25,204 L123,204 L123,206 L126.15,206 L126.15,220 L140.85,220 L140.85,206 L144,206 L144,204 L138.75,204 Z\" id=\"delete-[#1487]\"> \r\n                                                                        </path> \r\n                                                                    </g> \r\n                                                                </g> \r\n                                                            </g> \r\n                                                        </g>\r\n                                                    </svg>\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n                            </div>\r\n\r\n                            <div className='w-full flex flex-col'>\r\n                                <button onClick={() => {\r\n                                        setChats([...chats, []]); \r\n                                        setChatsResponses([...chatsResponses, []]);\r\n                                        setChatsNames([...chatsName, `Chat ${chatsCounter + 1}`])\r\n                                        setChatsCounter(prevCounter => prevCounter + 1);\r\n                                        console.log(chatsName)\r\n                                    }\r\n                                } className='w-full mb-3 text-black border-2 bg-green-300 border-green-500 py-3 rounded-lg hover:bg-green-400 hover:bg-opacity-30 transition-all'>Create New chats</button>\r\n                                <button onClick={() => {\r\n                                    if(selectedChat > 0){\r\n                                        setSelectedChat(prevSelectedChat => prevSelectedChat - 1)\r\n                                    }else{\r\n                                        setSelectedChat(0)\r\n                                    } \r\n                                    if(chats.length > 1){\r\n                                        setChats(prevChats => prevChats.filter((_, index) => index !== selectedChat)); \r\n                                        setChatsResponses(prevChatsResponses => prevChatsResponses.filter((_, index) => index !== selectedChat));\r\n                                        setChatsNames(prevChatsNames => prevChatsNames.filter((_, index) => index !== selectedChat));\r\n                                    }}\r\n                                } \r\n                                className='w-full mb-3 text-black border-2 bg-red-300 border-red-500 py-3 rounded-lg hover:bg-red-400 hover:bg-opacity-30 transition-all'>Delete This chats</button>\r\n                                \r\n                                <button onClick={() => {\r\n                                        setChats([[]]); \r\n                                        setChatsResponses([[]])\r\n                                        setChatsNames([\"Chat 1\"]);\r\n                                        setChatsCounter(1);\r\n                                    }\r\n                                } className='w-full mb-3 text-black border-2 bg-yellow-300 border-yellow-500 py-3 rounded-lg hover:bg-yellow-400 hover:bg-opacity-30 transition-all'>Delete All chats</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    <div className='relative h-full px-5 flex justify-center'>\r\n                        <div className='absolute top-0 mt-10 text-white text-lg font-bold bg-[#343541] py-5 px-3 shadow-black shadow-inner'>Please Login in order to save and create new chats</div>\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n\r\n        <div className='w-full'>\r\n            <div className='w-full h-[80%] flex flex-col overflow-y-scroll' style={{scrollbarWidth: \"thin\"}}>\r\n                {\r\n                    (chats[selectedChat].length > 0) && (\r\n                        chats[selectedChat].map((message, index1) => (\r\n                            <div className='w-full h-fit' key={index1} >\r\n                                <div className='userMessages px-48 bg-white w-full py-8 border-y-2 border-gray-300 md:px-10'>\r\n                                    {message.content}\r\n                                </div>\r\n\r\n                                <div className='gptMessages font-semibold px-48 bg-gray-100 text-black w-full py-8 md:px-10'>\r\n                                    {\r\n                                        (!chatsResponses[selectedChat][index1] && loading) ? (\r\n                                            <div className=' text-3xl tracking-widest'>\r\n                                                <LoadingDots />\r\n                                            </div>\r\n                                        ) : (\r\n                                            chatsResponses[selectedChat][index1].includes('```') ? (\r\n                                                chatsResponses[selectedChat][index1].split('```').map((e, index2) => (\r\n                                                    (index2 % 2 === 0) ? (\r\n                                                        {e}\r\n                                                    ) : (\r\n                                                        <CodeEditor code={e} language=\"javascript\"  />   \r\n                                                    )\r\n                                                ))\r\n                                            ) : (\r\n                                                chatsResponses[selectedChat][index1]\r\n                                            )\r\n                                        )\r\n                                        //chatsResponses[selectedChat][index1]\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        ))\r\n                    )\r\n                }\r\n            </div>\r\n\r\n            <div className='w-full h-[20%] py-3 flex justify-center items-center'>\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Start chatting!\" \r\n                    disabled={loading}\r\n                    value={message.content} \r\n                    onChange={ handleMessageChange } \r\n                    onKeyDown={ handleMessageKeyDown } \r\n                    className='w-[60%] h-fit px-5 py-3 rounded-lg outline-none border-1 border-gray-300 text-black shadow-[rgba(0,0,0,0.05)_0_0_10px_10px] transition-all duration-300 md:w-[80%]'></input>\r\n            </div>\r\n        </div>\r\n        </m.div >\r\n    </LazyMotion> \r\n  )\r\n}\r\n\r\nexport default ChatBot","import React, { useEffect, useRef } from \"react\";\r\nimport {basicSetup} from \"codemirror\"\r\nimport { EditorView } from \"@codemirror/view\";\r\nimport { javascript } from \"@codemirror/lang-javascript\";\r\n\r\nimport \"./CodeEditor.css\";\r\n\r\nconst CodeEditor = ({ code }) => {\r\n  const editorRef = useRef(null);\r\n\r\n  // useEffect(() => {\r\n  //   const view = new EditorView({\r\n  //     doc: code,\r\n  //     extensions: [basicSetup, javascript()],\r\n  //     parent: editorRef.current,\r\n  //   });\r\n\r\n  //   return () => {\r\n  //     view.destroy();\r\n  //   };\r\n  //   console.log(\"hello\")\r\n  // }, [code]);\r\n\r\n  // useEffect(() => {\r\n  //   if (editorRef.current) {\r\n  //     editorRef.current.editor.setValue(code);\r\n  //   }\r\n  // }, [code]);\r\n\r\n  return <div className=\" bg-gray-900\" ref={editorRef} />;\r\n};\r\n\r\nexport default CodeEditor;","import React from 'react';\r\nimport './LoadingDots.css';\r\n\r\nconst LoadingDots = () => {\r\n  return (\r\n    <div className=\"loading-dots\">\r\n      <span className=\"dot\">.</span>\r\n      <span className=\"dot\">.</span>\r\n      <span className=\"dot\">.</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingDots;\r\n"],"names":["userInfo","useSelector","state","_state$user","user","BASE_URL","process","REACT_APP_SERVER_URL","excludedDivRef","useRef","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","chatsCounter","setChatsCounter","_useState5","_useState6","selectedChat","setSelectedChat","_useState7","_useState8","chatsName","setChatsNames","_useState9","_useState10","changeNameState","setChangeNameState","_useState11","_useState12","newName","setNewName","_useState13","_useState14","nameChangeIndex","setChangeNameIndex","_useState15","_useState16","chats","setChats","_useState17","_useState18","chatsResponses","setChatsResponses","_useState19","role","content","_useState20","message","setMessage","sendChat","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","selectedChatProp","chatsProp","res","data","updatedResponses","wrap","_context","prev","next","fetch","concat","method","headers","body","JSON","stringify","chat","sent","json","undefined","chatResponse","Promise","resolve","then","prevChatResponses","_toConsumableArray","prevChatsResponses","map","index","t0","console","log","finish","stop","_x","_x2","apply","arguments","handleMessageKeyDown","_ref2","_callee2","e","_context2","key","prevChats","newChats","prevChat","_x3","handleNameChange","target","value","useEffect","_excludedDivRef$curre","handleClickOutside","event","current","contains","focus","window","addEventListener","removeEventListener","_jsx","LazyMotion","features","domAnimation","children","_jsxs","m","initial","opacity","animate","exit","className","_","index1","ref","onChange","onKeyDown","prevChatsName","prevChatName","index2","onClick","onMouseUp","filter","width","height","viewBox","fill","xmlns","id","strokeWidth","strokeLinecap","strokeLinejoin","d","prevSelectedChat","length","prevChatsNames","version","xmlnsXlink","stroke","strokewidth","fillRule","transform","prevCounter","style","scrollbarWidth","LoadingDots","includes","split","CodeEditor","code","language","type","placeholder","disabled","editorRef"],"sourceRoot":""}