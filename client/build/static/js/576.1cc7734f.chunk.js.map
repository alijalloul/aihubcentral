{"version":3,"file":"static/js/576.1cc7734f.chunk.js","mappings":"qOA6BA,EA1BmB,SAAHA,GAAyC,IAAnCC,EAAaD,EAAbC,cAAeC,EAAYF,EAAZE,aACjCC,GAA8CC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAtDI,EAAeF,EAAA,GAAEG,EAAkBH,EAAA,GAW5C,OACEI,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uBAAsBC,SAAA,EACjCC,EAAAA,EAAAA,KAAA,UAAQC,GAAG,SAASH,UAAU,UAAUI,OAAQP,EAAgBQ,WAAYC,QAXpD,WACzBT,GACDL,IACAM,GAAmB,KAEnBP,IACAO,GAAmB,GAEvB,EAGiHG,UAC3GF,EAAAA,EAAAA,MAAA,OAAKQ,KAAK,UAAUC,QAAQ,YAAYC,MAAM,6BAA4BR,SAAA,EAACC,EAAAA,EAAAA,KAAA,KAAGC,GAAG,oBAAoBO,YAAY,OAAQR,EAAAA,EAAAA,KAAA,KAAGC,GAAG,wBAAwBQ,cAAc,QAAQC,eAAe,WAAYb,EAAAA,EAAAA,MAAA,KAAGI,GAAG,sBAAqBF,SAAA,CAAC,KAACC,EAAAA,EAAAA,KAAA,QAAMW,EAAE,4MAA4MC,SAAS,YAAiB,YAG/cjB,IAAoBK,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iBAM/C,EC8FA,EArHa,WACX,IAAMe,EAAWC,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYC,sBAAwB,wBAE/CC,GAAgBC,EAAAA,EAAAA,QAAO,MAC7B1B,GAA4BC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnC2B,EAAMzB,EAAA,GAAE0B,EAAS1B,EAAA,GACxB2B,GAAsC5B,EAAAA,EAAAA,UAAS,IAAG6B,GAAA3B,EAAAA,EAAAA,GAAA0B,EAAA,GAA3CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,GAA0BhC,EAAAA,EAAAA,UAAS,MAAKiC,GAAA/B,EAAAA,EAAAA,GAAA8B,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAAkCpC,EAAAA,EAAAA,UAAS,MAAKqC,GAAAnC,EAAAA,EAAAA,GAAAkC,EAAA,GAA9BE,GAAFD,EAAA,GAAcA,EAAA,IAC9BE,GAA0CvC,EAAAA,EAAAA,UAAS,IAAGwC,GAAAtC,EAAAA,EAAAA,GAAAqC,EAAA,GAA/CE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GACtCG,GAAkC3C,EAAAA,EAAAA,UAAS,IAAG4C,GAAA1C,EAAAA,EAAAA,GAAAyC,EAAA,GAAvCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAAsC/C,EAAAA,EAAAA,UAAS,IAAGgD,GAAA9C,EAAAA,EAAAA,GAAA6C,EAAA,GAAhCC,EAAA,GAAgBA,EAAA,IAElCC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAuB,eAAAtD,GAAAuD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,YAC1B,kBAAmBC,QAAM,CAAAH,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEEE,UAAUC,aAAaC,aAAa,CAAE7B,OAAO,IAAQ,KAAD,EAAvEqB,EAAUE,EAAAO,KAChBrC,EAAU4B,GAAYE,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAQ,GAAAR,EAAA,SAEtBS,QAAQC,IAAIV,EAAAQ,GAAIG,SAAS,QAAAX,EAAAE,KAAA,iBAG3BO,QAAQC,IAAI,2DAA2D,yBAAAV,EAAAY,OAAA,GAAAf,EAAA,kBAE5E,kBAX4B,OAAA1D,EAAA0E,MAAA,KAAAC,UAAA,KAa7BrB,GACF,GAAG,IAEH,IAAMsB,EAAuB,WAC3B,IAAMC,EAAQ,IAAIC,cAAchD,EAAQ,CAAEiD,KAAM,cAEhDnD,EAAcoD,QAAUH,EACxBjD,EAAcoD,QAAQC,QAEtB,IAAIC,EAAS,GACbtD,EAAcoD,QAAQG,gBAAkB,SAACC,GACtCF,EAAOG,KAAKD,EAAEE,KACjB,EACAnD,EAAe+C,EACjB,EACMK,EAAsB,WAC1B3D,EAAcoD,QAAQP,OACtB7C,EAAcoD,QAAQQ,OAAS,WAC7B,IAAMvC,EAAY,IAAIwC,KAAKvD,EAAa,CAAE6C,KAAM,cAC1CW,EAAWC,IAAIC,gBAAgB3C,GAErCC,EAAaD,GACbV,EAASmD,GACTvD,EAAe,IAEf,IAAI0D,EAAO,IAAIC,KAAK,CAACJ,GAAW,qBAAqB,CAACX,KAAK,YAAagB,cAAa,IAAIC,MAAOC,YAC5FC,EAAY,IAAIC,aACpBD,EAAUE,MAAMC,IAAIR,GACpBS,SAASC,eAAe,aAAaC,MAAQN,EAAUM,MACvD9D,EAAawD,EAAUM,MAAM,IAE7BlC,QAAQC,IAAIsB,EACd,CACF,EAEMY,EAAqB,eAAAC,GAAAnD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAkD,IAAA,IAAAC,EAAA,OAAApD,EAAAA,EAAAA,KAAAI,MAAA,SAAAiD,GAAA,cAAAA,EAAA/C,KAAA+C,EAAA9C,MAAA,OAC5B,KAIQ6C,EAAS,IAAIE,YACZC,WAASxD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAuD,IAAA,IAAAC,EAAAC,EAAA5B,EAAA,OAAA9B,EAAAA,EAAAA,KAAAI,MAAA,SAAAuD,GAAA,cAAAA,EAAArD,KAAAqD,EAAApD,MAAA,OACiC,OAA5CkD,EAAeL,EAAOQ,OAAOC,MAAM,KAAK,GAAIF,EAAApD,KAAA,EAChCuD,MAAM,GAADC,OAAI9F,EAAQ,2BAA2B,CAC5D+F,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAEC,YAAaZ,EAAca,KAAM,SACxD,OANO,OAAHZ,EAAGC,EAAA/C,KAAA+C,EAAApD,KAAA,EAOUmD,EAAIa,OAAO,KAAD,EAAvBzC,EAAI6B,EAAA/C,KACVtB,EAAiBwC,GAAM,wBAAA6B,EAAA1C,OAAA,GAAAuC,EAAA,KAEzBJ,EAAOoB,cAAc/E,EAEvB,CAAE,MAAOgF,GACP3D,QAAQC,IAAI0D,EAEd,CACC,wBAAApB,EAAApC,OAAA,GAAAkC,EAAA,KACF,kBAzB0B,OAAAD,EAAAhC,MAAA,KAAAC,UAAA,KA2BzB,OACE/D,EAAAA,EAAAA,KAACsH,EAAAA,EAAU,CAACC,SAAUC,EAAAA,EAAazH,UACnCF,EAAAA,EAAAA,MAAC4H,EAAAA,EAAAA,IAAK,CACIC,QAAS,CAAEC,QAAS,GACpBC,QAAS,CAAED,QAAS,GACpBE,KAAM,CAAEF,QAAS,GACjB7H,UAAU,wDAAuDC,SAAA,EACzEF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,4CAA2CC,SAAA,EACxDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC5BC,EAAAA,EAAAA,KAAC8H,EAAU,CAACzI,cAAgB2E,EAAuB1E,aAAeqF,KAClE3E,EAAAA,EAAAA,KAAA,UAAQI,QAAS4D,EAAsBlE,UAAU,yCAAwCC,SAAC,qBAC1FC,EAAAA,EAAAA,KAAA,UAAQI,QAASuE,EAAqB7E,UAAU,yCAAwCC,SAAC,oBAEzFC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,QAAQiI,IAAKrG,GAASA,EAAOsG,UAAQ,KACtDhI,EAAAA,EAAAA,KAAA,SAAOC,GAAG,YAAYkE,KAAK,OAAO8D,SAAW,SAACzD,GAAO1C,EAAa0C,EAAE0D,OAAOtC,MAAM,GAAG,QAGtF5F,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,UAAQF,UAAU,gCAAgCM,QAAUyF,EAAuB9F,SAAE,iBAIzFC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,2CAA0CC,UACvDC,EAAAA,EAAAA,KAAA,YAAUmI,MAAOlG,EAAemG,UAAQ,EAACtI,UAAU,mEAK7D,C","sources":["components/TSST/Microphone/Microphone.js","components/TSST/TSST.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Microphone.css\"; // Import the CSS file for the animation\r\n\r\nconst Microphone = ({ startFunction, stopFunction }) => {\r\n    const [recordingStatus, setRecordingStatus] = useState(false);\r\n\r\n  const handleMicrophoneClick = () => {\r\n    if(recordingStatus){\r\n      stopFunction();\r\n      setRecordingStatus(false);\r\n    }else{\r\n      startFunction();\r\n      setRecordingStatus(true);\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"microphone_container\">\r\n        <button id=\"speech\" className=\"btn p-5\" active={recordingStatus.toString()} onClick={handleMicrophoneClick}>\r\n        <svg fill=\"#000000\" viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\"><g id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\"></g><g id=\"SVGRepo_tracerCarrier\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></g><g id=\"SVGRepo_iconCarrier\"> <path d=\"M16 8c0 4.418-3.59 8-8 8-4.418 0-8-3.59-8-8h2c0 3.307 2.686 6 6 6 3.307 0 6-2.686 6-6h2zM4 3.996a4 4 0 0 1 8 0v4.008a4 4 0 0 1-8 0V3.996zM8 2a2 2 0 0 0-2 2v4a2 2 0 1 0 4 0V4a2 2 0 0 0-2-2zM6 5h4v2H6V5z\" fillRule=\"evenodd\"></path> </g></svg>\r\n        </button>\r\n        {\r\n            recordingStatus && (<div className=\"pulse-ring\"></div>)\r\n        }\r\n        \r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default Microphone;","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { LazyMotion, domAnimation, m } from \"framer-motion\";\r\n\r\nimport Microphone from \"./Microphone/Microphone\";\r\nconst TSST = () => {\r\n  const BASE_URL = process.env.REACT_APP_SERVER_URL || \"http://localhost:5000\";\r\n\r\n  const mediaRecorder = useRef(null);\r\n  const [stream, setStream] = useState(null);\r\n  const [audioChunks, setAudioChunks] = useState([]);\r\n  const [audio, setAudio] = useState(null);\r\n  const [audioFile, setAudioFile] = useState(null);\r\n  const [transcribtion, setTranscription] = useState(\"\");\r\n  const [audioBlob, setAudioBlob] = useState(\"\");\r\n  const [audioBuffer, setAudioBuffer] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const initializeMediaRecorder = async () => {\r\n      if (\"MediaRecorder\" in window) {\r\n        try {\r\n            const streamData = await Navigator.mediaDevices.getUserMedia({ audio: true });\r\n            setStream(streamData);\r\n        } catch (err) {\r\n            console.log(err.message);\r\n        }\r\n      } else {\r\n          console.log(\"The MediaRecorder API is not supported in your browser.\");\r\n      }\r\n    }\r\n\r\n    initializeMediaRecorder();\r\n  }, [])\r\n\r\n  const handleStartRecording = () => {\r\n    const media = new MediaRecorder(stream, { type: \"audio/wav\" });\r\n\r\n    mediaRecorder.current = media;\r\n    mediaRecorder.current.start();\r\n\r\n    let chunks = [];\r\n    mediaRecorder.current.ondataavailable = (e) => {\r\n       chunks.push(e.data);\r\n    };\r\n    setAudioChunks(chunks);\r\n  }\r\n  const handleStopRecording = () => {\r\n    mediaRecorder.current.stop();\r\n    mediaRecorder.current.onstop = () => {\r\n      const audioBlob = new Blob(audioChunks, { type: \"audio/wav\" });\r\n      const audioUrl = URL.createObjectURL(audioBlob);\r\n\r\n      setAudioBlob(audioBlob)\r\n      setAudio(audioUrl);\r\n      setAudioChunks([]);\r\n\r\n      let file = new File([audioUrl], \"recorded_audio.wav\",{type:\"audio/wav\", lastModified:new Date().getTime()});\r\n      let container = new DataTransfer();\r\n      container.items.add(file);\r\n      document.getElementById(\"audioFile\").files = container.files;\r\n      setAudioFile(container.files[0]);\r\n\r\n      console.log(file);\r\n    };\r\n  }\r\n\r\n  const handleSubmitRecording = async () => {\r\n    try {\r\n      // Assuming you have an audio blob called 'audioBlob'\r\n\r\n      // Convert the audio blob to a base64 string\r\n      const reader = new FileReader();\r\n      reader.onloadend = async () => {\r\n        const base64String = reader.result.split(',')[1]; // Extract base64 data from the result\r\n        const res = await fetch(`${BASE_URL}/api/openai/transcriber`, {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({ audioBuffer: base64String, lang: \"en\" })\r\n        })\r\n        const data = await res.json();\r\n        setTranscription(data);\r\n      };\r\n      reader.readAsDataURL(audioBlob);\r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n\r\n    } finally {\r\n    }\r\n  }\r\n\r\n    return (\r\n      <LazyMotion features={domAnimation}> \r\n      <m.div  \r\n                initial={{ opacity: 0 }} \r\n                animate={{ opacity: 1 }} \r\n                exit={{ opacity: 0 }} \r\n                className=\"h-[calc(100vh-73px)] flex justify-center items-center\">\r\n        <div className=\"w-[40%] flex justify-between items-center\">\r\n          <div className=\"flex flex-col\">\r\n            <Microphone startFunction={ handleStartRecording } stopFunction={ handleStopRecording } />\r\n            <button onClick={handleStartRecording} className=\"w-fit my-10 p-5 bg-gray-200 rounded-lg\">Start Recording</button>\r\n            <button onClick={handleStopRecording} className=\"w-fit mb-10 p-5 bg-gray-200 rounded-lg\">Stop Recording</button>\r\n\r\n            <audio className=\"mb-10\" src={audio && audio} controls></audio>\r\n            <input id=\"audioFile\" type=\"file\" onChange={ (e) => {setAudioFile(e.target.files[0])}}/>\r\n          </div>\r\n          \r\n          <div>\r\n            <button className=\"p-10 bg-yellow-500 rounded-xl\" onClick={ handleSubmitRecording } >Submit</button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"w-[40%] flex justify-center items-center\">\r\n          <textarea value={transcribtion} readOnly className=\"w-[60%] aspect-square resize-none shadow-lg shadow-black\"></textarea>\r\n        </div>\r\n        </m.div >\r\n    </LazyMotion> \r\n    );\r\n};\r\nexport default TSST;"],"names":["_ref","startFunction","stopFunction","_useState","useState","_useState2","_slicedToArray","recordingStatus","setRecordingStatus","_jsxs","className","children","_jsx","id","active","toString","onClick","fill","viewBox","xmlns","strokeWidth","strokeLinecap","strokeLinejoin","d","fillRule","BASE_URL","process","REACT_APP_SERVER_URL","mediaRecorder","useRef","stream","setStream","_useState3","_useState4","audioChunks","setAudioChunks","_useState5","_useState6","audio","setAudio","_useState7","_useState8","setAudioFile","_useState9","_useState10","transcribtion","setTranscription","_useState11","_useState12","audioBlob","setAudioBlob","_useState13","_useState14","useEffect","initializeMediaRecorder","_asyncToGenerator","_regeneratorRuntime","mark","_callee","streamData","wrap","_context","prev","next","window","Navigator","mediaDevices","getUserMedia","sent","t0","console","log","message","stop","apply","arguments","handleStartRecording","media","MediaRecorder","type","current","start","chunks","ondataavailable","e","push","data","handleStopRecording","onstop","Blob","audioUrl","URL","createObjectURL","file","File","lastModified","Date","getTime","container","DataTransfer","items","add","document","getElementById","files","handleSubmitRecording","_ref2","_callee3","reader","_context3","FileReader","onloadend","_callee2","base64String","res","_context2","result","split","fetch","concat","method","headers","body","JSON","stringify","audioBuffer","lang","json","readAsDataURL","error","LazyMotion","features","domAnimation","m","initial","opacity","animate","exit","Microphone","src","controls","onChange","target","value","readOnly"],"sourceRoot":""}