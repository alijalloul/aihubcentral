{"version":3,"file":"static/js/513.75900aac.chunk.js","mappings":"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","sources":["components/Loader/Loader.js","constants/dallePrompts.js","components/CreateImage/CreateImage.js"],"sourcesContent":["import React from 'react'\n\nimport \"./Loader.css\";\n\nconst Loader = ( {stylingT} ) => {\n  return (\n    <div className={`lds-ring ${stylingT}`}>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n  )\n}\n\nexport default Loader","export const dalleSupriseMePrompts = [\r\n    \"Depict a dramatic battle scene between two mythical creatures.\",\r\n    \"Create an abstract painting that evokes the feeling of freedom.\",\r\n    \"Illustrate a magical forest full of whimsical creatures and plants.\",\r\n    \"Design an otherworldly spaceship for a sci-fi movie.\",\r\n    \"Paint a portrait of an elderly person and capture their wisdom and experience.\",\r\n    \"Draw a futuristic cityscape with towering skyscrapers and neon lights.\",\r\n    \"Create a mixed media piece inspired by the concept of time.\",\r\n    \"Depict a serene countryside landscape with rolling hills and a clear blue sky.\",\r\n    \"Design an intricate mandala with intricate patterns and symbols.\",\r\n    \"Paint a still life of a bowl of fruit with rich colors and textures.\",\r\n    \"Illustrate a majestic dragon soaring through the clouds.\",\r\n    \"Create a digital illustration of a bustling marketplace in a foreign land.\",\r\n    \"Depict a mystical underwater world with mermaids and sea creatures.\",\r\n    \"Design a whimsical illustration for a children's book.\",\r\n    \"Paint a landscape of a quiet winter night with snow-covered trees and a full moon.\",\r\n    \"Draw a surreal portrait of a person with a unique personality.\",\r\n    \"Create a sculpture of an animal that represents strength and power.\",\r\n    \"Illustrate a post-apocalyptic world with a stark, desolate landscape.\",\r\n    \"Design a cover for a fantasy novel with intricate details and symbols.\",\r\n    \"Paint a portrait of a person with a kind and compassionate soul.\",\r\n    \"Depict a dramatic stormy sea with crashing waves and dark skies.\",\r\n    \"Create a mixed media piece that represents the concept of rebirth.\",\r\n    \"Illustrate a bustling city street with people from different cultures and backgrounds.\",\r\n    \"Design an intricate tattoo inspired by nature.\",\r\n    \"Paint a still life of a bouquet of flowers with soft colors and delicate brushstrokes.\",\r\n    \"Draw a whimsical scene of a fantastical creature interacting with everyday objects.\",\r\n    \"Create a digital illustration of a fantastical castle on a mountaintop.\",\r\n    \"Depict a mystical forest with glowing mushrooms and hidden secrets.\",\r\n    \"Design a surreal landscape inspired by dreams and the subconscious mind.\",\r\n    \"Paint a portrait of a person with a fierce determination and passion.\",\r\n    \"Illustrate a fantastical world with mythical creatures and magical spells.\",\r\n    \"Create a sculpture of a person with a complex emal inner world.\",\r\n    \"Depict a serene beach with turquoise waters and palm trees.\",\r\n    \"Design an intricate pattern inspired by the natural world.\",\r\n    \"Paint a landscape of a peaceful countryside with rolling hills and a babbling brook.\",\r\n    \"Draw a fantastical creature with intricate details and unique characteristics.\",\r\n    \"Create a mixed media piece that represents the concept of hope.\",\r\n    \"Illustrate a cityscape at night with glowing lights and reflections in the water.\",\r\n    \"Design an intricate logo for a new company with a strong brand identity.\",\r\n    \"Paint a portrait of a person with a mischievous spirit and a twinkle in their eye.\",\r\n    \"Depict a majestic mountain range with snow-capped peaks and a deep valley below.\",\r\n    \"Create a digital illustration of a fantastical world with floating islands and airships.\",\r\n    \"Design a surrealist landscape inspired by the work of Salvador Dali.\",\r\n    \"Paint a still life of a vase of flowers with bold, vibrant colors.\",\r\n    \"Illustrate a mythical creature interacting with a real-life animal.\",\r\n    \"Depict a quiet forest with a gentle stream running through it.\",\r\n    \"Create a sculpture of an abstract concept, such as love or hope.\",\r\n    \"Design an intricate tattoo inspired by a piece of literature.\",\r\n    \"Paint a portrait of a person with a quiet confidence.\",\r\n]","import React, { useState } from 'react'\r\nimport { LazyMotion, domAnimation, m } from \"framer-motion\";\r\n\r\nimport Loader from \"../Loader/Loader.js\";\r\nimport {dalleSupriseMePrompts} from \"../../constants/dallePrompts.js\"\r\nimport emptyImage from \"../../img/empty.jpg\";\r\n\r\n\r\nconst CreateForm = () => {\r\n  const BASE_URL = process.env.REACT_APP_SERVER_URL || \"http://localhost:5000\";\r\n  const [dalleForm, setDalleForm] = useState({\r\n    name: \"\",\r\n    prompt: \"\",\r\n    nbImages: 1,\r\n    generatedImages: []\r\n  });\r\n  const[loading, setLoading] = useState(false);\r\n  const [imagePos, setImagePos] = useState(0);\r\n  const [resolution, setResolution] = useState(512);\r\n  const[errors, setErrors] = useState({\r\n    promptEmpty: false,\r\n    nbImagesEmpty: false,\r\n  });\r\n\r\n  const handleSupriseMe = (e) => {\r\n    e.preventDefault();\r\n    setDalleForm({ ...dalleForm, prompt: dalleSupriseMePrompts[Math.floor(Math.random()*dalleSupriseMePrompts.length)]});\r\n  }\r\n\r\n  const handleGenerate = async () => {\r\n    let isError=false;\r\n    if(dalleForm.nbImages < 1 || dalleForm.nbImages > 5){\r\n      setErrors({...errors, nbImagesEmpty: true});\r\n      isError = true;\r\n    } \r\n    if(!dalleForm.prompt){\r\n      setErrors({...errors, promptEmpty: true});\r\n      isError = true;\r\n    }\r\n\r\n    console.log(errors)\r\n    if(!isError){\r\n      setLoading(true);\r\n\r\n      try {\r\n        const res = await fetch(`${BASE_URL}/api/openai/dalle`, {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({ prompt: dalleForm.prompt, nbImages: dalleForm.nbImages, resolution: resolution }),\r\n        });\r\n        \r\n        const data = await res.json();\r\n\r\n        setDalleForm({ ...dalleForm, generatedImages: data.images});\r\n        setImagePos(0);\r\n      } catch (error) {\r\n        console.log(error);\r\n        setLoading(false);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    setDalleForm({ ...dalleForm, [e.target.name]: e.target.value });\r\n  }\r\n  return (\r\n    <LazyMotion features={domAnimation}> \r\n      <m.div  \r\n        initial={{ opacity: 0 }} \r\n        animate={{ opacity: 1 }} \r\n        exit={{ opacity: 0 }}\r\n        className='h-fit min-h-[calc(100vh-73px)] w-full px-10 flex bg-slate-50 justify-between md:flex-col'>\r\n        <div className='pl-10 flex flex-col justify-center md:pl-0'>\r\n          <div className='h-fit w-[80%] md:w-full'>\r\n            <p className='w-full my-2 text-black text-6xl mb-5 leading-[4rem] md:text-4xl'>\r\n              <span className=\"inline-block\" style={{\"background\":\"linear-gradient(45deg, rgba(255,0,224,1) 0%, rgba(0,1,255,1) 100%)\",\"backgroundClip\":\"text\",\"color\":\"transparent\", \"font-weight\": \"bold\"}}>Create&nbsp;</span> \r\n              <span className='inline-block'>Stunning&nbsp;</span> \r\n              <span className='inline-block'>And&nbsp;</span> \r\n              <span className='inline-block'>Creative&nbsp;</span>\r\n              <span className='inline-block' style={{\"background\":\"linear-gradient(45deg, rgba(0,255,248,1) 0%, rgba(255,0,202,1) 100%)\",\"backgroundClip\":\"text\",\"color\":\"transparent\", \"font-weight\": \"bold\"}}>Images&nbsp;</span> \r\n              <span className='inline-block'>From &nbsp;</span>\r\n              <span className='inline-block'>Prompts &nbsp;</span>\r\n              <span className='inline-block'>Using &nbsp;</span>\r\n              <span className='inline-block' style={{\"background\":\"linear-gradient(45deg, rgba(239,0,255,1) 0%, rgba(255,0,0,1) 100%)\",\"backgroundClip\":\"text\",\"color\":\"transparent\", \"font-weight\": \"bold\"}}>DALLE-2 AI!&nbsp;</span>\r\n            </p>\r\n            <form className=\"mb-3\">\r\n              <div>\r\n                <p>Your Name</p>\r\n                <input name=\"name\" type=\"text\" placeholder=\"John White\" className=\" outline-none mb-5 p-2 w-full rounded-sm border-solid border-2 border-gray-600\" onChange={ handleChange }></input>\r\n              </div>\r\n\r\n              <div className='mb-3'>\r\n                <p>Resolution</p>\r\n                <div className='w-fit flex rounded-md border-2 border-black'>\r\n                  <button onClick={(e) => {e.preventDefault(); setResolution(256) }} className={`px-5 py-3 ${(resolution === 256) && \"bg-black text-white\"} transition-all ease-in-out`}>256x256</button> \r\n                  <button onClick={(e) => {e.preventDefault(); setResolution(512) }} className={`px-5 py-3 border-x-2 border-black ${(resolution === 512) && \"bg-black text-white\"} transition-all ease-in-out`}>512x512</button>\r\n                  <button onClick={(e) => {e.preventDefault(); setResolution(1024)}} className={`px-5 py-3 ${(resolution === 1024) && \"bg-black text-white\"} transition-all ease-in-out`}>1024x1024</button>\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                <p style={{color: errors.nbImagesEmpty && \"red\"}}>Number of Images</p>\r\n                <input name=\"nbImages\" type=\"text\" value={dalleForm.nbImages} onChange={ (e) => {handleChange(e); setErrors({ ...errors, nbImagesEmpty: false})}} style={{borderColor: `${ errors.nbImagesEmpty ? \"red\" : \"black\" }`}} className={`outline-none ${errors.nbImagesEmpty ? \"mb-0\" : \"mb-2\"} p-2 w-[10%] text-center rounded-sm border-solid border-2 border-gray-600`}/>\r\n                <p className={`${!errors.nbImagesEmpty && \"hidden\"} text-red-600 italic mb-2`}>The number of images should be between 1 and 5 </p>\r\n              </div>\r\n              <div>\r\n                <p style={{color: errors.promptEmpty && \"red\"}}>Prompt</p>\r\n                <input name=\"prompt\" type=\"text\" placeholder=\"A pizza wearing glasses eating a pizza\" value={dalleForm.prompt} onChange={ (e) => {handleChange(e); setErrors({ ...errors, promptEmpty: false})}} style={{borderColor: `${ errors.promptEmpty ? \"red\" : \"black\" }`}} className={`outline-none ${errors.promptEmpty ? \"mb-0\" : \"mb-2\"} p-2 w-full rounded-sm border-solid border-2 border-gray-600`}></input>\r\n                <p className={`${!errors.promptEmpty && \"hidden\"} text-red-600 italic mb-2`}>Please fill the prompt</p>\r\n                <button onClick={ handleSupriseMe } className=\"px-2 py-3 bg-[rgb(109,84,210)] text-white rounded-md hover:bg-[rgb(77,56,158)] transition-all ease-in-out duration-200\">Suprise Me</button>\r\n              </div>\r\n            </form>\r\n\r\n            <button onClick={handleGenerate} className=\"mb-2 py-2 w-full bg-black rounded-md text-white hover:bg-yellow-600 transition ease-in-out duration-200\">Generate</button>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className='relative  w-[50vw] flex justify-center items-center md:my-10 md:w-full md:h-[35vh]'>\r\n          <button onClick={() => setImagePos((imagePos > 0) &&imagePos - 1)} className='h-[35vw] w-10 rounded-l-lg flex items-center justify-center bg-gray-500 hover:bg-gray-400 active:bg-gray-300 transition-all ease-in-out duration-200 md:h-full text-white'>&lt;</button>\r\n          \r\n          <div className=' md:h-[35vh] md:aspect-square'>\r\n            <div className='relative h-[35vw] aspect-square overflow-hidden md:h-full'>\r\n              {\r\n                loading && (\r\n                  <Loader stylingT=\"absolute aspect-square absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\"/>\r\n                )\r\n              }\r\n              <div className={`relative flex w-max h-full transition-all ease-in-out`} style={{left: `${(-1)*imagePos*100}%`}}>\r\n                {\r\n                  (dalleForm?.generatedImages?.length > 0) ? (\r\n                    dalleForm?.generatedImages?.map((generatedImage, index) => (\r\n                      <img key={index} src={generatedImage} alt=\"N/A\" className={`h-full aspect-square object-contain ${loading && (\"filter: opacity-20\")}`}></img>\r\n                    ))\r\n                  ) : (\r\n                    <img src={emptyImage} alt=\"N/A\" className={`h-full aspect-square object-contain ${loading && (\"filter: opacity-20\")}`}></img>\r\n                  )\r\n                }\r\n              </div>\r\n            </div>  \r\n          </div>\r\n\r\n          <button onClick={ () => {(imagePos < (dalleForm?.generatedImages?.length - 1)) && setImagePos(imagePos + 1); console.log(imagePos,\":\",`left-[-${imagePos*100}%]`)}} className='h-[35vw] w-10 rounded-r-lg flex items-center justify-center bg-gray-500 hover:bg-gray-400 active:bg-gray-300 transition-all ease-in-out duration-200 md:h-full text-white'>&gt;</button>\r\n        </div>\r\n      </m.div >\r\n    </LazyMotion>\r\n  )\r\n}\r\n\r\nexport default CreateForm"],"names":["_ref","stylingT","_jsxs","className","concat","children","_jsx","dalleSupriseMePrompts","_dalleForm$generatedI","_dalleForm$generatedI2","BASE_URL","process","REACT_APP_SERVER_URL","_useState","useState","name","prompt","nbImages","generatedImages","_useState2","_slicedToArray","dalleForm","setDalleForm","_useState3","_useState4","loading","setLoading","_useState5","_useState6","imagePos","setImagePos","_useState7","_useState8","resolution","setResolution","_useState9","promptEmpty","nbImagesEmpty","_useState10","errors","setErrors","handleGenerate","_asyncToGenerator","_regeneratorRuntime","mark","_callee","isError","res","data","wrap","_context","prev","next","_objectSpread","console","log","fetch","method","headers","body","JSON","stringify","sent","json","images","t0","finish","stop","apply","arguments","handleChange","e","_defineProperty","target","value","LazyMotion","features","domAnimation","m","initial","opacity","animate","exit","style","type","placeholder","onChange","onClick","preventDefault","color","borderColor","Math","floor","random","length","Loader","left","map","generatedImage","index","src","alt","emptyImage","_dalleForm$generatedI3"],"sourceRoot":""}